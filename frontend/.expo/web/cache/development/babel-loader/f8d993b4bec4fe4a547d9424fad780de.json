{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/charlotteteo/Downloads/cz2006final/craapy_swe_proj_frontend/frontend/screens/help/FAQScreen.js\";\n\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport { Avatar, Button, Card, Title, Paragraph, IconButton } from \"react-native-paper\";\nimport { faq } from \"../../assets/faq\";\n\nvar list = function list() {\n  return faq.map(function (element) {\n    return React.createElement(TouchableOpacity, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }\n    }, React.createElement(Card, {\n      style: {\n        marginBottom: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }\n    }, React.createElement(Card.Content, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, React.createElement(Title, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, element.name), React.createElement(Paragraph, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, element.shortDesc))));\n  });\n};\n\nfunction FAQScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchtext = _useState2[0],\n      setsearchtext = _useState2[1];\n\n  var _useState3 = useState(\"false\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      wish = _useState4[0],\n      setWish = _useState4[1];\n\n  var searchResults = [];\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, React.createElement(ImageBackground, {\n    style: styles.background,\n    source: require(\"../../assets/Background.png\"),\n    resizeMode: \"cover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.headerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"FAQ Page\")), React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, list()));\n}\n\nvar Stack = createStackNavigator();\nexport default function homestack() {\n  return React.createElement(Stack.Navigator, {\n    headerMode: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: FAQScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    backgroundColor: \"#FFB899\"\n  },\n  button: {\n    backgroundColor: \"white\",\n    height: \"35%\",\n    width: \"73%\",\n    alignItems: \"center\",\n    marginTop: 30,\n    borderRadius: 20\n  },\n  buttonText: {\n    color: \"black\",\n    fontWeight: \"bold\",\n    paddingBottom: \"10%\",\n    paddingTop: \"10%\",\n    fontSize: 18\n  },\n  buttonContainer: {\n    borderColor: \"black\",\n    borderWidth: 5\n  },\n  image: {\n    width: \"45%\",\n    height: \"45%\"\n  },\n  background: {\n    width: \"110%\",\n    height: 100,\n    position: \"relative\",\n    marginBottom: 30\n  },\n  headerText: {\n    color: \"white\",\n    fontSize: 28,\n    fontWeight: \"bold\",\n    flexDirection: \"column\",\n    alignSelf: \"center\",\n    marginTop: 45\n  }\n});","map":{"version":3,"sources":["/Users/charlotteteo/Downloads/cz2006final/craapy_swe_proj_frontend/frontend/screens/help/FAQScreen.js"],"names":["React","useState","createStackNavigator","FontAwesome","Avatar","Button","Card","Title","Paragraph","IconButton","faq","list","map","element","marginBottom","name","shortDesc","FAQScreen","navigation","searchtext","setsearchtext","wish","setWish","searchResults","styles","container","background","require","headerText","Stack","homestack","StyleSheet","create","flex","alignItems","backgroundColor","button","height","width","marginTop","borderRadius","buttonText","color","fontWeight","paddingBottom","paddingTop","fontSize","buttonContainer","borderColor","borderWidth","image","position","flexDirection","alignSelf"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n    Text,\n    View,\n    TextInput,\n    StyleSheet,\n    TouchableOpacity,\n    ScrollView,\n    ImageBackground\n} from \"react-native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport {\n    Avatar,\n    Button,\n    Card,\n    Title,\n    Paragraph,\n    IconButton,\n} from \"react-native-paper\";\n\nimport {faq} from \"../../assets/faq\";\nconst list = ()=>{\n    return (faq.map((element)=>{\n        return(\n    <TouchableOpacity\n>\n    <Card style={{ marginBottom: 10 }}>\n        <Card.Content>\n\n            <Title>{element.name}</Title>\n\n            <Paragraph>{element.shortDesc}</Paragraph>\n        </Card.Content>\n    \n    </Card>\n</TouchableOpacity>);\n\n    }));\n  };\n   \n\nfunction FAQScreen({ navigation }) {\n    const [searchtext, setsearchtext] = useState(\"\");\n    const [wish, setWish] = useState(\"false\");\n    const searchResults = [];\n    \n\n    return (\n        <View style={styles.container}>\n            <ImageBackground style={styles.background} source={require('../../assets/Background.png')} resizeMode=\"cover\">      \n                <Text style={styles.headerText}>FAQ Page</Text>\n            </ImageBackground>\n         \n            <ScrollView>\n                {list()}\n\n                {/* <TouchableOpacity\n                    onPress={() => {\n                        console.log(\"FAQ1\");\n                    }}\n                >\n                    <Card style={{ marginBottom: 10 }}>\n                        <Card.Content>\n                \n                            <Title>{faq[1].name}</Title>\n\n                            <Paragraph>{faq[1].shortDesc}</Paragraph>\n                        </Card.Content>\n                    \n                    </Card>\n                </TouchableOpacity> */}\n            </ScrollView>\n        </View>\n    );\n}\nconst Stack = createStackNavigator();\n\nexport default function homestack() {\n    return (\n        <Stack.Navigator headerMode=\"none\">\n            <Stack.Screen name=\"Home\" component={FAQScreen} />\n            \n        </Stack.Navigator>\n    );\n}\n\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        //flexDirection: 'column',\n        //borderColor: \"blue\",\n        //borderWidth: 5,\n\n        //justifyContent: \"center\",\n        alignItems: \"center\",\n        backgroundColor: \"#FFB899\",\n    },\n\n    button: {\n        backgroundColor: \"white\",\n        height: \"35%\",\n        width: \"73%\",\n        alignItems: \"center\",\n\n        marginTop: 30,\n        borderRadius: 20,\n    },\n\n    buttonText: {\n        color: \"black\",\n        fontWeight: \"bold\",\n        paddingBottom: \"10%\",\n        paddingTop: \"10%\",\n        fontSize: 18,\n    },\n\n    buttonContainer: {\n        borderColor: \"black\",\n        borderWidth: 5\n    },\n    image: {\n        width: \"45%\",\n        height: \"45%\",\n    },\n    background:{\n        width:\"110%\",\n        height:100,\n        position: \"relative\",\n        //borderColor: \"black\",\n        //borderWidth: 5,\n        marginBottom: 30\n    },\n    headerText:{\n        color:\"white\",\n        fontSize: 28,\n        fontWeight:\"bold\",\n        flexDirection: \"column\",\n        alignSelf:\"center\",\n        marginTop: 45\n    }\n});\n"]},"metadata":{},"sourceType":"module"}