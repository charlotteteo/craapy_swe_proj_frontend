{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/charlotteteo/Downloads/cz2006final/craapy_swe_proj_frontend/frontend/screens/ResultsScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport SearchScreen from \"./home/search/SearchScreen\";\nimport FilterScreen from \"./home/filter/FilterScreen\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport InfoScreen from \"./InfoScreen\";\nimport NearbyCarparkMapsScreen from \"./maps/NearbyCarparkMapsScreen\";\nimport { Avatar, Card, Title, Paragraph, IconButton } from \"react-native-paper\";\n\nfunction ResultsScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var path = route.params.path;\n\n  var getMovies = function getMovies() {\n    var response, json;\n    return _regeneratorRuntime.async(function getMovies$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch('http://localhost:8080/search/' + path));\n\n          case 3:\n            response = _context.sent;\n            console.log(path);\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 7:\n            json = _context.sent;\n            setData(json);\n            _context.next = 14;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 14:\n            _context.prev = 14;\n            setLoading(false);\n            return _context.finish(14);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 11, 14, 17]], Promise);\n  };\n\n  useEffect(function () {\n    getMovies();\n  }, []);\n\n  var list = function list() {\n    return data.map(function (element) {\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          navigation.navigate(\"InfoScreen\", {\n            path: element.name\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }\n      }, React.createElement(Card, {\n        style: {\n          marginBottom: 10\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }, React.createElement(Card.Content, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: [{\n          fontWeight: 'bold',\n          fontSize: 20\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 19\n        }\n      }, element.name), React.createElement(Text, {\n        style: [{\n          fontWeight: 'bold',\n          fontSize: 15\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 19\n        }\n      }, \"Address:\", element.address), React.createElement(Text, {\n        style: [{\n          fontWeight: 'bold',\n          fontSize: 15\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 19\n        }\n      }, \"Operation Hours:\", element.operationhours), React.createElement(Text, {\n        style: [{\n          fontWeight: 'bold',\n          fontSize: 15\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 19\n        }\n      }, \"Food Categories:\", element.foodcategories))));\n    });\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: {\n      flex: 1,\n      padding: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, list()));\n}\n\n;\nvar Stack = createStackNavigator();\nexport default function homestack() {\n  return React.createElement(Stack.Navigator, {\n    headerMode: \"float\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 3\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"ResultsScreen\",\n    component: ResultsScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"InfoScreen\",\n    component: InfoScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 6\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"NearbyCarparkMapsScreen\",\n    component: NearbyCarparkMapsScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }));\n}\nmodule.exports = ResultsScreen;","map":{"version":3,"sources":["/Users/charlotteteo/Downloads/cz2006final/craapy_swe_proj_frontend/frontend/screens/ResultsScreen.js"],"names":["React","useEffect","useState","createStackNavigator","SearchScreen","FilterScreen","NavigationContainer","InfoScreen","NearbyCarparkMapsScreen","Avatar","Card","Title","Paragraph","IconButton","ResultsScreen","navigation","route","isLoading","setLoading","data","setData","path","params","getMovies","fetch","response","console","log","json","error","list","map","element","navigate","name","marginBottom","fontWeight","fontSize","address","operationhours","foodcategories","flex","padding","Stack","homestack","module","exports"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { SafeAreaView,ActivityIndicator, FlatList, Text, View , TouchableOpacity,ScrollView} from 'react-native';\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport SearchScreen from \"./home/search/SearchScreen\";\nimport FilterScreen from \"./home/filter/FilterScreen\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport InfoScreen from \"./InfoScreen\";\nimport NearbyCarparkMapsScreen from \"./maps/NearbyCarparkMapsScreen\";\nimport {\n\tAvatar,\n\t\n\tCard,\n\tTitle,\n\tParagraph,\n\tIconButton,\n} from \"react-native-paper\";\n\n\nfunction ResultsScreen ({ navigation,route }){\n  const [isLoading, setLoading] = useState(true);\n  const [data, setData] = useState([]);\n  const {path} = route.params;\n  \n\n\n  const getMovies = async () => {\n     try {\n      const response = await fetch('http://localhost:8080/search/'+path);\n      console.log(path)\n      const json = await response.json();\n  \n      setData(json);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    getMovies();\n  }, []);\n\n  const list = () => {\n  \n    return data.map((element) => {\n     \n      return (\n        \n              <TouchableOpacity\tonPress={() => {\n                navigation.navigate(\"InfoScreen\",{path:element.name})\n            }}>\n\n           \n            <Card style={{ marginBottom: 10 }}>\n                      <Card.Content>\n                {/* <View key={element.key} style={{margin: 10}}> */}\n                  <Text style={[ {fontWeight: 'bold',fontSize: 20}]}>\n                    {element.name}\n                    </Text>\n                  <Text style={[ {fontWeight: 'bold',fontSize: 15}]}>Address:{element.address}</Text>\n\n                  <Text style={[ {fontWeight: 'bold',fontSize: 15}]}>Operation Hours:{element.operationhours}</Text>\n\n                  <Text style={[ {fontWeight: 'bold',fontSize: 15}]}>Food Categories:{element.foodcategories}</Text>\n\n            </Card.Content>\n  \n  \n  </Card>\n            </TouchableOpacity>\n        \n      );\n    });\n  };\n\n\n\n  return (\n    <SafeAreaView style={{ flex: 1, padding: 24 }}>\n      <ScrollView>\n     {list()}\n    </ScrollView>\n    </SafeAreaView>\n  );\n};\n\n\nconst Stack = createStackNavigator();\n\nexport default function homestack() {\n\treturn (\n\t\t<Stack.Navigator headerMode=\"float\">\n    <Stack.Screen name=\"ResultsScreen\" component={ResultsScreen} />\n    \t<Stack.Screen name=\"InfoScreen\" component={InfoScreen} />\n      <Stack.Screen name=\"NearbyCarparkMapsScreen\" component={NearbyCarparkMapsScreen} />\n\t\t</Stack.Navigator>\n\t);\n}\n\nmodule.exports=ResultsScreen;"]},"metadata":{},"sourceType":"module"}