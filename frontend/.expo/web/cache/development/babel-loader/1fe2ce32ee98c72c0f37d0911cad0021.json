{"ast":null,"code":"\"use strict\";\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Modalize = void 0;\n\nvar React = __importStar(require(\"react\"));\n\nvar react_native_1 = require(\"react-native-web/dist/index\");\n\nvar react_native_gesture_handler_1 = require(\"react-native-gesture-handler\");\n\nvar use_dimensions_1 = require(\"./utils/use-dimensions\");\n\nvar get_spring_config_1 = require(\"./utils/get-spring-config\");\n\nvar devices_1 = require(\"./utils/devices\");\n\nvar libraries_1 = require(\"./utils/libraries\");\n\nvar invariant_1 = require(\"./utils/invariant\");\n\nvar compose_refs_1 = require(\"./utils/compose-refs\");\n\nvar styles_1 = __importDefault(require(\"./styles\"));\n\nvar AnimatedKeyboardAvoidingView = react_native_1.Animated.createAnimatedComponent(react_native_1.KeyboardAvoidingView);\nvar SCROLL_THRESHOLD = -4;\nvar USE_NATIVE_DRIVER = true;\nvar ACTIVATED = 20;\nvar PAN_DURATION = 150;\n\nvar ModalizeBase = function ModalizeBase(_ref, ref) {\n  var contentRef = _ref.contentRef,\n      children = _ref.children,\n      scrollViewProps = _ref.scrollViewProps,\n      flatListProps = _ref.flatListProps,\n      sectionListProps = _ref.sectionListProps,\n      customRenderer = _ref.customRenderer,\n      rootStyle = _ref.rootStyle,\n      modalStyle = _ref.modalStyle,\n      handleStyle = _ref.handleStyle,\n      overlayStyle = _ref.overlayStyle,\n      childrenStyle = _ref.childrenStyle,\n      snapPoint = _ref.snapPoint,\n      modalHeight = _ref.modalHeight,\n      _ref$modalTopOffset = _ref.modalTopOffset,\n      modalTopOffset = _ref$modalTopOffset === void 0 ? react_native_1.Platform.select({\n    ios: 0,\n    android: react_native_1.StatusBar.currentHeight || 0,\n    default: 0\n  }) : _ref$modalTopOffset,\n      alwaysOpen = _ref.alwaysOpen,\n      _ref$adjustToContentH = _ref.adjustToContentHeight,\n      adjustToContentHeight = _ref$adjustToContentH === void 0 ? false : _ref$adjustToContentH,\n      _ref$handlePosition = _ref.handlePosition,\n      handlePosition = _ref$handlePosition === void 0 ? 'outside' : _ref$handlePosition,\n      _ref$disableScrollIfP = _ref.disableScrollIfPossible,\n      disableScrollIfPossible = _ref$disableScrollIfP === void 0 ? true : _ref$disableScrollIfP,\n      _ref$avoidKeyboardLik = _ref.avoidKeyboardLikeIOS,\n      avoidKeyboardLikeIOS = _ref$avoidKeyboardLik === void 0 ? react_native_1.Platform.select({\n    ios: true,\n    android: false,\n    default: true\n  }) : _ref$avoidKeyboardLik,\n      _ref$keyboardAvoiding = _ref.keyboardAvoidingBehavior,\n      keyboardAvoidingBehavior = _ref$keyboardAvoiding === void 0 ? 'padding' : _ref$keyboardAvoiding,\n      keyboardAvoidingOffset = _ref.keyboardAvoidingOffset,\n      _ref$panGestureEnable = _ref.panGestureEnabled,\n      panGestureEnabled = _ref$panGestureEnable === void 0 ? true : _ref$panGestureEnable,\n      _ref$panGestureCompon = _ref.panGestureComponentEnabled,\n      panGestureComponentEnabled = _ref$panGestureCompon === void 0 ? false : _ref$panGestureCompon,\n      _ref$tapGestureEnable = _ref.tapGestureEnabled,\n      tapGestureEnabled = _ref$tapGestureEnable === void 0 ? true : _ref$tapGestureEnable,\n      _ref$closeOnOverlayTa = _ref.closeOnOverlayTap,\n      closeOnOverlayTap = _ref$closeOnOverlayTa === void 0 ? true : _ref$closeOnOverlayTa,\n      _ref$closeSnapPointSt = _ref.closeSnapPointStraightEnabled,\n      closeSnapPointStraightEnabled = _ref$closeSnapPointSt === void 0 ? true : _ref$closeSnapPointSt,\n      _ref$openAnimationCon = _ref.openAnimationConfig,\n      openAnimationConfig = _ref$openAnimationCon === void 0 ? {\n    timing: {\n      duration: 240,\n      easing: react_native_1.Easing.ease\n    },\n    spring: {\n      speed: 14,\n      bounciness: 4\n    }\n  } : _ref$openAnimationCon,\n      _ref$closeAnimationCo = _ref.closeAnimationConfig,\n      closeAnimationConfig = _ref$closeAnimationCo === void 0 ? {\n    timing: {\n      duration: 240,\n      easing: react_native_1.Easing.ease\n    }\n  } : _ref$closeAnimationCo,\n      _ref$dragToss = _ref.dragToss,\n      dragToss = _ref$dragToss === void 0 ? 0.18 : _ref$dragToss,\n      _ref$threshold = _ref.threshold,\n      threshold = _ref$threshold === void 0 ? 120 : _ref$threshold,\n      _ref$velocity = _ref.velocity,\n      velocity = _ref$velocity === void 0 ? 2800 : _ref$velocity,\n      panGestureAnimatedValue = _ref.panGestureAnimatedValue,\n      _ref$useNativeDriver = _ref.useNativeDriver,\n      useNativeDriver = _ref$useNativeDriver === void 0 ? true : _ref$useNativeDriver,\n      _ref$withReactModal = _ref.withReactModal,\n      withReactModal = _ref$withReactModal === void 0 ? false : _ref$withReactModal,\n      reactModalProps = _ref.reactModalProps,\n      _ref$withHandle = _ref.withHandle,\n      withHandle = _ref$withHandle === void 0 ? true : _ref$withHandle,\n      _ref$withOverlay = _ref.withOverlay,\n      withOverlay = _ref$withOverlay === void 0 ? true : _ref$withOverlay,\n      HeaderComponent = _ref.HeaderComponent,\n      FooterComponent = _ref.FooterComponent,\n      FloatingComponent = _ref.FloatingComponent,\n      onOpen = _ref.onOpen,\n      onOpened = _ref.onOpened,\n      onClose = _ref.onClose,\n      onClosed = _ref.onClosed,\n      onBackButtonPress = _ref.onBackButtonPress,\n      onPositionChange = _ref.onPositionChange,\n      onOverlayPress = _ref.onOverlayPress,\n      onLayout = _ref.onLayout;\n\n  var _use_dimensions_1$use = use_dimensions_1.useDimensions(),\n      screenHeight = _use_dimensions_1$use.height;\n\n  var isHandleOutside = handlePosition === 'outside';\n  var handleHeight = withHandle ? 20 : isHandleOutside ? 35 : 20;\n  var fullHeight = screenHeight - modalTopOffset;\n  var computedHeight = fullHeight - handleHeight - (devices_1.isIphoneX ? 34 : 0);\n  var endHeight = modalHeight || computedHeight;\n  var adjustValue = adjustToContentHeight ? undefined : endHeight;\n  var snaps = snapPoint ? [0, endHeight - snapPoint, endHeight] : [0, endHeight];\n\n  var _React$useState = React.useState(adjustValue),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      modalHeightValue = _React$useState2[0],\n      setModalHeightValue = _React$useState2[1];\n\n  var _React$useState3 = React.useState(snapPoint ? endHeight - snapPoint : 0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      lastSnap = _React$useState4[0],\n      setLastSnap = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      isVisible = _React$useState6[0],\n      setIsVisible = _React$useState6[1];\n\n  var _React$useState7 = React.useState(true),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      showContent = _React$useState8[0],\n      setShowContent = _React$useState8[1];\n\n  var _React$useState9 = React.useState(true),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      enableBounces = _React$useState10[0],\n      setEnableBounces = _React$useState10[1];\n\n  var _React$useState11 = React.useState(false),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      keyboardToggle = _React$useState12[0],\n      setKeyboardToggle = _React$useState12[1];\n\n  var _React$useState13 = React.useState(0),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      keyboardHeight = _React$useState14[0],\n      setKeyboardHeight = _React$useState14[1];\n\n  var _React$useState15 = React.useState(alwaysOpen || snapPoint ? true : undefined),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      disableScroll = _React$useState16[0],\n      setDisableScroll = _React$useState16[1];\n\n  var _React$useState17 = React.useState(0),\n      _React$useState18 = _slicedToArray(_React$useState17, 2),\n      beginScrollYValue = _React$useState18[0],\n      setBeginScrollYValue = _React$useState18[1];\n\n  var _React$useState19 = React.useState('initial'),\n      _React$useState20 = _slicedToArray(_React$useState19, 2),\n      modalPosition = _React$useState20[0],\n      setModalPosition = _React$useState20[1];\n\n  var _React$useState21 = React.useState(false),\n      _React$useState22 = _slicedToArray(_React$useState21, 2),\n      cancelClose = _React$useState22[0],\n      setCancelClose = _React$useState22[1];\n\n  var _React$useState23 = React.useState(new Map()),\n      _React$useState24 = _slicedToArray(_React$useState23, 2),\n      layouts = _React$useState24[0],\n      setLayouts = _React$useState24[1];\n\n  var cancelTranslateY = React.useRef(new react_native_1.Animated.Value(1)).current;\n  var componentTranslateY = React.useRef(new react_native_1.Animated.Value(0)).current;\n  var overlay = React.useRef(new react_native_1.Animated.Value(0)).current;\n  var beginScrollY = React.useRef(new react_native_1.Animated.Value(0)).current;\n  var dragY = React.useRef(new react_native_1.Animated.Value(0)).current;\n  var translateY = React.useRef(new react_native_1.Animated.Value(screenHeight)).current;\n  var reverseBeginScrollY = React.useRef(react_native_1.Animated.multiply(new react_native_1.Animated.Value(-1), beginScrollY)).current;\n  var tapGestureModalizeRef = React.useRef(null);\n  var panGestureChildrenRef = React.useRef(null);\n  var nativeViewChildrenRef = React.useRef(null);\n  var contentViewRef = React.useRef(null);\n  var tapGestureOverlayRef = React.useRef(null);\n  var backButtonListenerRef = React.useRef(null);\n  var diffClamp = react_native_1.Animated.diffClamp(reverseBeginScrollY, -screenHeight, 0);\n  var componentDragEnabled = componentTranslateY._value === 1;\n  var dragValue = react_native_1.Animated.add(react_native_1.Animated.multiply(dragY, componentDragEnabled ? 1 : cancelTranslateY), diffClamp);\n  var value = react_native_1.Animated.add(react_native_1.Animated.multiply(translateY, componentDragEnabled ? 1 : cancelTranslateY), dragValue);\n  var willCloseModalize = false;\n\n  var handleBackPress = function handleBackPress() {\n    if (alwaysOpen) {\n      return false;\n    }\n\n    if (onBackButtonPress) {\n      return onBackButtonPress();\n    } else {\n      handleClose();\n    }\n\n    return true;\n  };\n\n  var handleKeyboardShow = function handleKeyboardShow(event) {\n    var height = event.endCoordinates.height;\n    setKeyboardToggle(true);\n    setKeyboardHeight(height);\n  };\n\n  var handleKeyboardHide = function handleKeyboardHide() {\n    setKeyboardToggle(false);\n    setKeyboardHeight(0);\n  };\n\n  var handleAnimateOpen = function handleAnimateOpen(alwaysOpenValue) {\n    var dest = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n    var timing = openAnimationConfig.timing,\n        spring = openAnimationConfig.spring;\n    backButtonListenerRef.current = react_native_1.BackHandler.addEventListener('hardwareBackPress', handleBackPress);\n    var toValue = 0;\n    var toPanValue = 0;\n    var newPosition;\n\n    if (dest === 'top') {\n      toValue = 0;\n    } else if (alwaysOpenValue) {\n      toValue = (modalHeightValue || 0) - alwaysOpenValue;\n    } else if (snapPoint) {\n      toValue = (modalHeightValue || 0) - snapPoint;\n    }\n\n    if (panGestureAnimatedValue && (alwaysOpenValue || snapPoint)) {\n      toPanValue = 0;\n    } else if (panGestureAnimatedValue && !alwaysOpenValue && (dest === 'top' || dest === 'default')) {\n      toPanValue = 1;\n    }\n\n    setIsVisible(true);\n    setShowContent(true);\n\n    if (alwaysOpenValue && dest !== 'top' || snapPoint && dest === 'default') {\n      newPosition = 'initial';\n    } else {\n      newPosition = 'top';\n    }\n\n    react_native_1.Animated.parallel([react_native_1.Animated.timing(overlay, {\n      toValue: alwaysOpenValue && dest === 'default' ? 0 : 1,\n      duration: timing.duration,\n      easing: react_native_1.Easing.ease,\n      useNativeDriver: USE_NATIVE_DRIVER\n    }), panGestureAnimatedValue ? react_native_1.Animated.timing(panGestureAnimatedValue, {\n      toValue: toPanValue,\n      duration: PAN_DURATION,\n      easing: react_native_1.Easing.ease,\n      useNativeDriver: useNativeDriver\n    }) : react_native_1.Animated.delay(0), spring ? react_native_1.Animated.spring(translateY, _extends(_extends({}, get_spring_config_1.getSpringConfig(spring)), {\n      toValue: toValue,\n      useNativeDriver: USE_NATIVE_DRIVER\n    })) : react_native_1.Animated.timing(translateY, {\n      toValue: toValue,\n      duration: timing.duration,\n      easing: timing.easing,\n      useNativeDriver: USE_NATIVE_DRIVER\n    })]).start(function () {\n      if (onOpened) {\n        onOpened();\n      }\n\n      setModalPosition(newPosition);\n\n      if (onPositionChange) {\n        onPositionChange(newPosition);\n      }\n    });\n  };\n\n  var handleAnimateClose = function handleAnimateClose() {\n    var dest = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'default';\n    var callback = arguments.length > 1 ? arguments[1] : undefined;\n\n    var _a;\n\n    var timing = closeAnimationConfig.timing,\n        spring = closeAnimationConfig.spring;\n    var lastSnapValue = snapPoint ? snaps[1] : 80;\n    var toInitialAlwaysOpen = dest === 'alwaysOpen' && Boolean(alwaysOpen);\n    var toValue = toInitialAlwaysOpen && alwaysOpen ? (modalHeightValue || 0) - alwaysOpen : screenHeight;\n    (_a = backButtonListenerRef.current) === null || _a === void 0 ? void 0 : _a.remove();\n    cancelTranslateY.setValue(1);\n    setBeginScrollYValue(0);\n    beginScrollY.setValue(0);\n    react_native_1.Animated.parallel([react_native_1.Animated.timing(overlay, {\n      toValue: 0,\n      duration: timing.duration,\n      easing: react_native_1.Easing.ease,\n      useNativeDriver: USE_NATIVE_DRIVER\n    }), panGestureAnimatedValue ? react_native_1.Animated.timing(panGestureAnimatedValue, {\n      toValue: 0,\n      duration: PAN_DURATION,\n      easing: react_native_1.Easing.ease,\n      useNativeDriver: useNativeDriver\n    }) : react_native_1.Animated.delay(0), spring ? react_native_1.Animated.spring(translateY, _extends(_extends({}, get_spring_config_1.getSpringConfig(spring)), {\n      toValue: toValue,\n      useNativeDriver: USE_NATIVE_DRIVER\n    })) : react_native_1.Animated.timing(translateY, {\n      duration: timing.duration,\n      easing: react_native_1.Easing.out(react_native_1.Easing.ease),\n      toValue: toValue,\n      useNativeDriver: USE_NATIVE_DRIVER\n    })]).start(function () {\n      if (onClosed) {\n        onClosed();\n      }\n\n      if (callback) {\n        callback();\n      }\n\n      if (alwaysOpen && dest === 'alwaysOpen' && onPositionChange) {\n        onPositionChange('initial');\n      }\n\n      if (alwaysOpen && dest === 'alwaysOpen') {\n        setModalPosition('initial');\n      }\n\n      setShowContent(toInitialAlwaysOpen);\n      translateY.setValue(toValue);\n      dragY.setValue(0);\n      willCloseModalize = false;\n      setLastSnap(lastSnapValue);\n      setIsVisible(toInitialAlwaysOpen);\n    });\n  };\n\n  var handleModalizeContentLayout = function handleModalizeContentLayout(_ref2) {\n    var layout = _ref2.nativeEvent.layout;\n    var value = Math.min(layout.height + (!adjustToContentHeight || keyboardHeight ? layout.y : 0), endHeight - react_native_1.Platform.select({\n      ios: 0,\n      android: keyboardHeight,\n      default: 0\n    }));\n    setModalHeightValue(value);\n  };\n\n  var handleBaseLayout = function handleBaseLayout(component, height) {\n    setLayouts(new Map(layouts.set(component, height)));\n    var max = Array.from(layouts).reduce(function (acc, cur) {\n      return acc + (cur === null || cur === void 0 ? void 0 : cur[1]);\n    }, 0);\n    var maxFixed = +max.toFixed(3);\n    var endHeightFixed = +endHeight.toFixed(3);\n    var shorterHeight = maxFixed < endHeightFixed;\n    setDisableScroll(shorterHeight && disableScrollIfPossible);\n  };\n\n  var handleContentLayout = function handleContentLayout(_ref3) {\n    var nativeEvent = _ref3.nativeEvent;\n\n    if (onLayout) {\n      onLayout(nativeEvent);\n    }\n\n    if (alwaysOpen && adjustToContentHeight) {\n      var height = nativeEvent.layout.height;\n      return setModalHeightValue(height);\n    }\n\n    if (!adjustToContentHeight) {\n      return;\n    }\n\n    handleBaseLayout('content', nativeEvent.layout.height);\n  };\n\n  var handleComponentLayout = function handleComponentLayout(_ref4, name, absolute) {\n    var nativeEvent = _ref4.nativeEvent;\n\n    if (!adjustToContentHeight || absolute) {\n      return;\n    }\n\n    handleBaseLayout(name, nativeEvent.layout.height);\n  };\n\n  var handleClose = function handleClose(dest, callback) {\n    if (onClose) {\n      onClose();\n    }\n\n    handleAnimateClose(dest, callback);\n  };\n\n  var handleChildren = function handleChildren(_ref5, type) {\n    var nativeEvent = _ref5.nativeEvent;\n    var timing = closeAnimationConfig.timing;\n    var velocityY = nativeEvent.velocityY,\n        translationY = nativeEvent.translationY;\n    var negativeReverseScroll = modalPosition === 'top' && beginScrollYValue >= (snapPoint ? 0 : SCROLL_THRESHOLD) && translationY < 0;\n    var thresholdProps = translationY > threshold && beginScrollYValue === 0;\n    var closeThreshold = velocity ? beginScrollYValue <= 20 && velocityY >= velocity || thresholdProps : thresholdProps;\n    var enableBouncesValue = true;\n\n    if (type !== 'component' && cancelTranslateY._value === 0) {\n      componentTranslateY.setValue(0);\n    }\n\n    if (nativeEvent.oldState === react_native_gesture_handler_1.State.BEGAN) {\n      setCancelClose(false);\n\n      if (!closeSnapPointStraightEnabled && snapPoint ? beginScrollYValue > 0 : beginScrollYValue > 0 || negativeReverseScroll) {\n        setCancelClose(true);\n        translateY.setValue(0);\n        dragY.setValue(0);\n        cancelTranslateY.setValue(0);\n        enableBouncesValue = true;\n      } else {\n        cancelTranslateY.setValue(1);\n        enableBouncesValue = false;\n\n        if (!tapGestureEnabled) {\n          setDisableScroll((Boolean(snapPoint) || Boolean(alwaysOpen)) && modalPosition === 'initial');\n        }\n      }\n    }\n\n    setEnableBounces(devices_1.isAndroid ? false : alwaysOpen ? beginScrollYValue > 0 || translationY < 0 : enableBouncesValue);\n\n    if (nativeEvent.oldState === react_native_gesture_handler_1.State.ACTIVE) {\n      var toValue = translationY - beginScrollYValue;\n      var destSnapPoint = 0;\n\n      if (snapPoint || alwaysOpen) {\n        var endOffsetY = lastSnap + toValue + dragToss * velocityY;\n        snaps.forEach(function (snap) {\n          var distFromSnap = Math.abs(snap - endOffsetY);\n          var diffPoint = Math.abs(destSnapPoint - endOffsetY);\n\n          if (distFromSnap < diffPoint && !alwaysOpen) {\n            if (closeSnapPointStraightEnabled) {\n              if (modalPosition === 'initial' && negativeReverseScroll) {\n                destSnapPoint = snap;\n                willCloseModalize = false;\n              }\n\n              if (snap === endHeight) {\n                destSnapPoint = snap;\n                willCloseModalize = true;\n                handleClose();\n              }\n            } else {\n              destSnapPoint = snap;\n              willCloseModalize = false;\n\n              if (snap === endHeight) {\n                willCloseModalize = true;\n                handleClose();\n              }\n            }\n          }\n\n          if (distFromSnap < diffPoint && alwaysOpen && beginScrollYValue <= 0) {\n            destSnapPoint = (modalHeightValue || 0) - alwaysOpen;\n            willCloseModalize = false;\n          }\n        });\n      } else if (closeThreshold && !alwaysOpen && !cancelClose) {\n        willCloseModalize = true;\n        handleClose();\n      }\n\n      if (willCloseModalize) {\n        return;\n      }\n\n      setLastSnap(destSnapPoint);\n      translateY.extractOffset();\n      translateY.setValue(toValue);\n      translateY.flattenOffset();\n      dragY.setValue(0);\n\n      if (alwaysOpen) {\n        react_native_1.Animated.timing(overlay, {\n          toValue: Number(destSnapPoint <= 0),\n          duration: timing.duration,\n          easing: react_native_1.Easing.ease,\n          useNativeDriver: USE_NATIVE_DRIVER\n        }).start();\n      }\n\n      react_native_1.Animated.spring(translateY, {\n        tension: 50,\n        friction: 12,\n        velocity: velocityY,\n        toValue: destSnapPoint,\n        useNativeDriver: USE_NATIVE_DRIVER\n      }).start();\n\n      if (beginScrollYValue <= 0) {\n        var modalPositionValue = destSnapPoint <= 0 ? 'top' : 'initial';\n\n        if (panGestureAnimatedValue) {\n          react_native_1.Animated.timing(panGestureAnimatedValue, {\n            toValue: Number(modalPositionValue === 'top'),\n            duration: PAN_DURATION,\n            easing: react_native_1.Easing.ease,\n            useNativeDriver: useNativeDriver\n          }).start();\n        }\n\n        if (!adjustToContentHeight && modalPositionValue === 'top') {\n          setDisableScroll(false);\n        }\n\n        if (onPositionChange && modalPosition !== modalPositionValue) {\n          onPositionChange(modalPositionValue);\n        }\n\n        if (modalPosition !== modalPositionValue) {\n          setModalPosition(modalPositionValue);\n        }\n      }\n    }\n  };\n\n  var handleComponent = function handleComponent(_ref6) {\n    var nativeEvent = _ref6.nativeEvent;\n\n    if (nativeEvent.oldState === react_native_gesture_handler_1.State.BEGAN) {\n      componentTranslateY.setValue(1);\n      beginScrollY.setValue(0);\n    }\n\n    handleChildren({\n      nativeEvent: nativeEvent\n    }, 'component');\n  };\n\n  var handleOverlay = function handleOverlay(_ref7) {\n    var nativeEvent = _ref7.nativeEvent;\n\n    if (nativeEvent.oldState === react_native_gesture_handler_1.State.ACTIVE && !willCloseModalize) {\n      if (onOverlayPress) {\n        onOverlayPress();\n      }\n\n      var dest = !!alwaysOpen ? 'alwaysOpen' : 'default';\n      handleClose(dest);\n    }\n  };\n\n  var handleGestureEvent = react_native_1.Animated.event([{\n    nativeEvent: {\n      translationY: dragY\n    }\n  }], {\n    useNativeDriver: USE_NATIVE_DRIVER,\n    listener: function listener(_ref8) {\n      var translationY = _ref8.nativeEvent.translationY;\n\n      var _a;\n\n      if (panGestureAnimatedValue) {\n        var offset = (_a = alwaysOpen !== null && alwaysOpen !== void 0 ? alwaysOpen : snapPoint) !== null && _a !== void 0 ? _a : 0;\n        var diff = Math.abs(translationY / (endHeight - offset));\n        var y = translationY <= 0 ? diff : 1 - diff;\n\n        var _value;\n\n        if (modalPosition === 'initial' && translationY > 0) {\n          _value = 0;\n        } else if (modalPosition === 'top' && translationY <= 0) {\n          _value = 1;\n        } else {\n          _value = y;\n        }\n\n        panGestureAnimatedValue.setValue(_value);\n      }\n    }\n  });\n\n  var renderHandle = function renderHandle() {\n    var handleStyles = [styles_1.default.handle];\n    var shapeStyles = [styles_1.default.handle__shape, handleStyle];\n\n    if (!withHandle) {\n      return null;\n    }\n\n    if (!isHandleOutside) {\n      handleStyles.push(styles_1.default.handleBottom);\n      shapeStyles.push(styles_1.default.handle__shapeBottom, handleStyle);\n    }\n\n    return React.createElement(react_native_gesture_handler_1.PanGestureHandler, {\n      enabled: panGestureEnabled,\n      simultaneousHandlers: tapGestureModalizeRef,\n      shouldCancelWhenOutside: false,\n      onGestureEvent: handleGestureEvent,\n      onHandlerStateChange: handleComponent\n    }, React.createElement(react_native_1.Animated.View, {\n      style: handleStyles\n    }, React.createElement(react_native_1.View, {\n      style: shapeStyles\n    })));\n  };\n\n  var renderElement = function renderElement(Element) {\n    return typeof Element === 'function' ? Element() : Element;\n  };\n\n  var renderComponent = function renderComponent(component, name) {\n    var _a;\n\n    if (!component) {\n      return null;\n    }\n\n    var tag = renderElement(component);\n\n    if (devices_1.isAndroid && !panGestureComponentEnabled) {\n      return tag;\n    }\n\n    var obj = react_native_1.StyleSheet.flatten((_a = tag === null || tag === void 0 ? void 0 : tag.props) === null || _a === void 0 ? void 0 : _a.style);\n    var absolute = (obj === null || obj === void 0 ? void 0 : obj.position) === 'absolute';\n    var zIndex = obj === null || obj === void 0 ? void 0 : obj.zIndex;\n    return React.createElement(react_native_gesture_handler_1.PanGestureHandler, {\n      enabled: panGestureEnabled,\n      shouldCancelWhenOutside: false,\n      onGestureEvent: handleGestureEvent,\n      onHandlerStateChange: handleComponent\n    }, React.createElement(react_native_1.Animated.View, {\n      style: {\n        zIndex: zIndex\n      },\n      onLayout: function onLayout(e) {\n        return handleComponentLayout(e, name, absolute);\n      }\n    }, tag));\n  };\n\n  var renderContent = function renderContent() {\n    var _a;\n\n    var keyboardDismissMode = devices_1.isIos ? 'interactive' : 'on-drag';\n    var passedOnProps = (_a = flatListProps !== null && flatListProps !== void 0 ? flatListProps : sectionListProps) !== null && _a !== void 0 ? _a : scrollViewProps;\n    var bounces = (passedOnProps === null || passedOnProps === void 0 ? void 0 : passedOnProps.bounces) !== undefined && !(passedOnProps === null || passedOnProps === void 0 ? void 0 : passedOnProps.bounces) ? passedOnProps === null || passedOnProps === void 0 ? void 0 : passedOnProps.bounces : enableBounces;\n    var scrollEnabled = (passedOnProps === null || passedOnProps === void 0 ? void 0 : passedOnProps.scrollEnabled) !== undefined && !(passedOnProps === null || passedOnProps === void 0 ? void 0 : passedOnProps.scrollEnabled) ? passedOnProps === null || passedOnProps === void 0 ? void 0 : passedOnProps.scrollEnabled : keyboardToggle || !disableScroll;\n    var scrollEventThrottle = (passedOnProps === null || passedOnProps === void 0 ? void 0 : passedOnProps.scrollEventThrottle) || 16;\n    var onScrollBeginDrag = passedOnProps === null || passedOnProps === void 0 ? void 0 : passedOnProps.onScrollBeginDrag;\n    var opts = {\n      ref: compose_refs_1.composeRefs(contentViewRef, contentRef),\n      bounces: bounces,\n      onScrollBeginDrag: react_native_1.Animated.event([{\n        nativeEvent: {\n          contentOffset: {\n            y: beginScrollY\n          }\n        }\n      }], {\n        useNativeDriver: USE_NATIVE_DRIVER,\n        listener: onScrollBeginDrag\n      }),\n      scrollEventThrottle: scrollEventThrottle,\n      onLayout: handleContentLayout,\n      scrollEnabled: scrollEnabled,\n      keyboardDismissMode: keyboardDismissMode\n    };\n\n    if (flatListProps) {\n      return React.createElement(react_native_1.Animated.FlatList, _extends({}, flatListProps, opts));\n    }\n\n    if (sectionListProps) {\n      return React.createElement(react_native_1.Animated.SectionList, _extends({}, sectionListProps, opts));\n    }\n\n    if (customRenderer) {\n      var tag = renderElement(customRenderer);\n      return React.cloneElement(tag, _extends({}, opts));\n    }\n\n    return React.createElement(react_native_1.Animated.ScrollView, _extends({}, scrollViewProps, opts), children);\n  };\n\n  var renderChildren = function renderChildren() {\n    var style = adjustToContentHeight ? styles_1.default.content__adjustHeight : styles_1.default.content__container;\n    var minDist = libraries_1.isRNGH2() ? undefined : ACTIVATED;\n    return React.createElement(react_native_gesture_handler_1.PanGestureHandler, {\n      ref: panGestureChildrenRef,\n      enabled: panGestureEnabled,\n      simultaneousHandlers: [nativeViewChildrenRef, tapGestureModalizeRef],\n      shouldCancelWhenOutside: false,\n      onGestureEvent: handleGestureEvent,\n      minDist: minDist,\n      activeOffsetY: ACTIVATED,\n      activeOffsetX: ACTIVATED,\n      onHandlerStateChange: handleChildren\n    }, React.createElement(react_native_1.Animated.View, {\n      style: [style, childrenStyle]\n    }, React.createElement(react_native_gesture_handler_1.NativeViewGestureHandler, {\n      ref: nativeViewChildrenRef,\n      waitFor: tapGestureModalizeRef,\n      simultaneousHandlers: panGestureChildrenRef\n    }, renderContent())));\n  };\n\n  var renderOverlay = function renderOverlay() {\n    var pointerEvents = alwaysOpen && (modalPosition === 'initial' || !modalPosition) ? 'box-none' : 'auto';\n    return React.createElement(react_native_gesture_handler_1.PanGestureHandler, {\n      enabled: panGestureEnabled,\n      simultaneousHandlers: tapGestureModalizeRef,\n      shouldCancelWhenOutside: false,\n      onGestureEvent: handleGestureEvent,\n      onHandlerStateChange: handleChildren\n    }, React.createElement(react_native_1.Animated.View, {\n      style: styles_1.default.overlay,\n      pointerEvents: pointerEvents\n    }, showContent && React.createElement(react_native_gesture_handler_1.TapGestureHandler, {\n      ref: tapGestureOverlayRef,\n      enabled: closeOnOverlayTap !== undefined ? closeOnOverlayTap : panGestureEnabled,\n      onHandlerStateChange: handleOverlay\n    }, React.createElement(react_native_1.Animated.View, {\n      style: [styles_1.default.overlay__background, overlayStyle, {\n        opacity: overlay.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, 1]\n        })\n      }],\n      pointerEvents: pointerEvents\n    }))));\n  };\n\n  React.useImperativeHandle(ref, function () {\n    return {\n      open: function open(dest) {\n        if (onOpen) {\n          onOpen();\n        }\n\n        handleAnimateOpen(alwaysOpen, dest);\n      },\n      close: function close(dest, callback) {\n        handleClose(dest, callback);\n      }\n    };\n  });\n  React.useEffect(function () {\n    if (alwaysOpen && (modalHeightValue || adjustToContentHeight)) {\n      handleAnimateOpen(alwaysOpen);\n    }\n  }, [alwaysOpen, modalHeightValue]);\n  React.useEffect(function () {\n    invariant_1.invariant(modalHeight && adjustToContentHeight, \"You can't use both 'modalHeight' and 'adjustToContentHeight' props at the same time. Only choose one of the two.\");\n    invariant_1.invariant((scrollViewProps || children) && flatListProps, \"You have defined 'flatListProps' along with 'scrollViewProps' or 'children' props. Remove 'scrollViewProps' or 'children' or 'flatListProps' to fix the error.\");\n    invariant_1.invariant((scrollViewProps || children) && sectionListProps, \"You have defined 'sectionListProps'  along with 'scrollViewProps' or 'children' props. Remove 'scrollViewProps' or 'children' or 'sectionListProps' to fix the error.\");\n  }, [modalHeight, adjustToContentHeight, scrollViewProps, children, flatListProps, sectionListProps]);\n  React.useEffect(function () {\n    setModalHeightValue(adjustValue);\n  }, [adjustToContentHeight, modalHeight, screenHeight]);\n  React.useEffect(function () {\n    var keyboardShowListener = null;\n    var keyboardHideListener = null;\n    var beginScrollYListener = beginScrollY.addListener(function (_ref9) {\n      var value = _ref9.value;\n      return setBeginScrollYValue(value);\n    });\n\n    if (libraries_1.isBelowRN65) {\n      react_native_1.Keyboard.addListener('keyboardDidShow', handleKeyboardShow);\n      react_native_1.Keyboard.addListener('keyboardDidHide', handleKeyboardHide);\n    } else {\n      keyboardShowListener = react_native_1.Keyboard.addListener('keyboardDidShow', handleKeyboardShow);\n      keyboardHideListener = react_native_1.Keyboard.addListener('keyboardDidHide', handleKeyboardHide);\n    }\n\n    return function () {\n      var _a;\n\n      (_a = backButtonListenerRef.current) === null || _a === void 0 ? void 0 : _a.remove();\n      beginScrollY.removeListener(beginScrollYListener);\n\n      if (libraries_1.isBelowRN65) {\n        react_native_1.Keyboard.removeListener('keyboardDidShow', handleKeyboardShow);\n        react_native_1.Keyboard.removeListener('keyboardDidHide', handleKeyboardHide);\n      } else {\n        keyboardShowListener === null || keyboardShowListener === void 0 ? void 0 : keyboardShowListener.remove();\n        keyboardHideListener === null || keyboardHideListener === void 0 ? void 0 : keyboardHideListener.remove();\n      }\n    };\n  }, []);\n  var keyboardAvoidingViewProps = {\n    keyboardVerticalOffset: keyboardAvoidingOffset,\n    behavior: keyboardAvoidingBehavior,\n    enabled: avoidKeyboardLikeIOS,\n    style: [styles_1.default.modalize__content, modalStyle, {\n      height: modalHeightValue,\n      maxHeight: endHeight,\n      transform: [{\n        translateY: value.interpolate({\n          inputRange: [-40, 0, endHeight],\n          outputRange: [0, 0, endHeight],\n          extrapolate: 'clamp'\n        })\n      }]\n    }]\n  };\n\n  if (!avoidKeyboardLikeIOS && !adjustToContentHeight) {\n    keyboardAvoidingViewProps.onLayout = handleModalizeContentLayout;\n  }\n\n  var renderModalize = React.createElement(react_native_1.View, {\n    style: [styles_1.default.modalize, rootStyle],\n    pointerEvents: alwaysOpen || !withOverlay ? 'box-none' : 'auto'\n  }, React.createElement(react_native_gesture_handler_1.TapGestureHandler, {\n    ref: tapGestureModalizeRef,\n    maxDurationMs: tapGestureEnabled ? 100000 : 50,\n    maxDeltaY: lastSnap,\n    enabled: panGestureEnabled\n  }, React.createElement(react_native_1.View, {\n    style: styles_1.default.modalize__wrapper,\n    pointerEvents: \"box-none\"\n  }, showContent && React.createElement(AnimatedKeyboardAvoidingView, _extends({}, keyboardAvoidingViewProps), renderHandle(), renderComponent(HeaderComponent, 'header'), renderChildren(), renderComponent(FooterComponent, 'footer')), withOverlay && renderOverlay())), renderComponent(FloatingComponent, 'floating'));\n\n  var renderReactModal = function renderReactModal(child) {\n    return React.createElement(react_native_1.Modal, _extends({}, reactModalProps, {\n      supportedOrientations: ['landscape', 'portrait', 'portrait-upside-down'],\n      onRequestClose: handleBackPress,\n      hardwareAccelerated: USE_NATIVE_DRIVER,\n      visible: isVisible,\n      transparent: true\n    }), child);\n  };\n\n  if (!isVisible) {\n    return null;\n  }\n\n  if (withReactModal) {\n    return renderReactModal(renderModalize);\n  }\n\n  return renderModalize;\n};\n\nexports.Modalize = React.forwardRef(ModalizeBase);","map":{"version":3,"sources":["/Users/charlotteteo/Downloads/cz2006final/craapy_swe_proj_frontend/frontend/node_modules/react-native-modalize/lib/index.js"],"names":["__createBinding","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__importStar","mod","__esModule","result","hasOwnProperty","call","__importDefault","exports","Modalize","React","require","react_native_gesture_handler_1","use_dimensions_1","get_spring_config_1","devices_1","libraries_1","invariant_1","compose_refs_1","styles_1","AnimatedKeyboardAvoidingView","react_native_1","Animated","createAnimatedComponent","KeyboardAvoidingView","SCROLL_THRESHOLD","USE_NATIVE_DRIVER","ACTIVATED","PAN_DURATION","ModalizeBase","ref","contentRef","children","scrollViewProps","flatListProps","sectionListProps","customRenderer","rootStyle","modalStyle","handleStyle","overlayStyle","childrenStyle","snapPoint","modalHeight","modalTopOffset","Platform","select","ios","android","StatusBar","currentHeight","default","alwaysOpen","adjustToContentHeight","handlePosition","disableScrollIfPossible","avoidKeyboardLikeIOS","keyboardAvoidingBehavior","keyboardAvoidingOffset","panGestureEnabled","panGestureComponentEnabled","tapGestureEnabled","closeOnOverlayTap","closeSnapPointStraightEnabled","openAnimationConfig","timing","duration","easing","Easing","ease","spring","speed","bounciness","closeAnimationConfig","dragToss","threshold","velocity","panGestureAnimatedValue","useNativeDriver","withReactModal","reactModalProps","withHandle","withOverlay","HeaderComponent","FooterComponent","FloatingComponent","onOpen","onOpened","onClose","onClosed","onBackButtonPress","onPositionChange","onOverlayPress","onLayout","useDimensions","screenHeight","height","isHandleOutside","handleHeight","fullHeight","computedHeight","isIphoneX","endHeight","adjustValue","snaps","useState","modalHeightValue","setModalHeightValue","lastSnap","setLastSnap","isVisible","setIsVisible","showContent","setShowContent","enableBounces","setEnableBounces","keyboardToggle","setKeyboardToggle","keyboardHeight","setKeyboardHeight","disableScroll","setDisableScroll","beginScrollYValue","setBeginScrollYValue","modalPosition","setModalPosition","cancelClose","setCancelClose","Map","layouts","setLayouts","cancelTranslateY","useRef","Value","current","componentTranslateY","overlay","beginScrollY","dragY","translateY","reverseBeginScrollY","multiply","tapGestureModalizeRef","panGestureChildrenRef","nativeViewChildrenRef","contentViewRef","tapGestureOverlayRef","backButtonListenerRef","diffClamp","componentDragEnabled","_value","dragValue","add","willCloseModalize","handleBackPress","handleClose","handleKeyboardShow","event","endCoordinates","handleKeyboardHide","handleAnimateOpen","alwaysOpenValue","dest","BackHandler","addEventListener","toValue","toPanValue","newPosition","parallel","delay","getSpringConfig","start","handleAnimateClose","callback","_a","lastSnapValue","toInitialAlwaysOpen","Boolean","remove","setValue","out","handleModalizeContentLayout","layout","nativeEvent","Math","min","y","handleBaseLayout","component","set","max","Array","from","reduce","acc","cur","maxFixed","toFixed","endHeightFixed","shorterHeight","handleContentLayout","handleComponentLayout","name","absolute","handleChildren","type","velocityY","translationY","negativeReverseScroll","thresholdProps","closeThreshold","enableBouncesValue","oldState","State","BEGAN","isAndroid","ACTIVE","destSnapPoint","endOffsetY","forEach","snap","distFromSnap","abs","diffPoint","extractOffset","flattenOffset","Number","tension","friction","modalPositionValue","handleComponent","handleOverlay","handleGestureEvent","listener","offset","diff","renderHandle","handleStyles","handle","shapeStyles","handle__shape","push","handleBottom","handle__shapeBottom","createElement","PanGestureHandler","enabled","simultaneousHandlers","shouldCancelWhenOutside","onGestureEvent","onHandlerStateChange","View","style","renderElement","Element","renderComponent","tag","obj","StyleSheet","flatten","props","position","zIndex","e","renderContent","keyboardDismissMode","isIos","passedOnProps","bounces","scrollEnabled","scrollEventThrottle","onScrollBeginDrag","opts","composeRefs","contentOffset","FlatList","SectionList","cloneElement","ScrollView","renderChildren","content__adjustHeight","content__container","minDist","isRNGH2","activeOffsetY","activeOffsetX","NativeViewGestureHandler","waitFor","renderOverlay","pointerEvents","TapGestureHandler","overlay__background","opacity","interpolate","inputRange","outputRange","useImperativeHandle","open","close","useEffect","invariant","keyboardShowListener","keyboardHideListener","beginScrollYListener","addListener","isBelowRN65","Keyboard","removeListener","keyboardAvoidingViewProps","keyboardVerticalOffset","behavior","modalize__content","maxHeight","transform","extrapolate","renderModalize","modalize","maxDurationMs","maxDeltaY","modalize__wrapper","renderReactModal","child","Modal","supportedOrientations","onRequestClose","hardwareAccelerated","visible","transparent","forwardRef"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Modalize = void 0;\n/**\n * esModuleInterop: true looks to work everywhere except\n * on snack.expo for some reason. Will revisit this later.\n */\nconst React = __importStar(require(\"react\"));\nconst react_native_1 = require(\"react-native\");\nconst react_native_gesture_handler_1 = require(\"react-native-gesture-handler\");\nconst use_dimensions_1 = require(\"./utils/use-dimensions\");\nconst get_spring_config_1 = require(\"./utils/get-spring-config\");\nconst devices_1 = require(\"./utils/devices\");\nconst libraries_1 = require(\"./utils/libraries\");\nconst invariant_1 = require(\"./utils/invariant\");\nconst compose_refs_1 = require(\"./utils/compose-refs\");\nconst styles_1 = __importDefault(require(\"./styles\"));\nconst AnimatedKeyboardAvoidingView = react_native_1.Animated.createAnimatedComponent(react_native_1.KeyboardAvoidingView);\n/**\n * When scrolling, it happens than beginScrollYValue is not always equal to 0 (top of the ScrollView).\n * Since we use this to trigger the swipe down gesture animation, we allow a small threshold to\n * not dismiss Modalize when we are using the ScrollView and we don't want to dismiss.\n */\nconst SCROLL_THRESHOLD = -4;\nconst USE_NATIVE_DRIVER = true;\nconst ACTIVATED = 20;\nconst PAN_DURATION = 150;\nconst ModalizeBase = ({ \n// Refs\ncontentRef, \n// Renderers\nchildren, scrollViewProps, flatListProps, sectionListProps, customRenderer, \n// Styles\nrootStyle, modalStyle, handleStyle, overlayStyle, childrenStyle, \n// Layout\nsnapPoint, modalHeight, modalTopOffset = react_native_1.Platform.select({\n    ios: 0,\n    android: react_native_1.StatusBar.currentHeight || 0,\n    default: 0,\n}), alwaysOpen, adjustToContentHeight = false, \n// Options\nhandlePosition = 'outside', disableScrollIfPossible = true, avoidKeyboardLikeIOS = react_native_1.Platform.select({\n    ios: true,\n    android: false,\n    default: true,\n}), keyboardAvoidingBehavior = 'padding', keyboardAvoidingOffset, panGestureEnabled = true, panGestureComponentEnabled = false, tapGestureEnabled = true, closeOnOverlayTap = true, closeSnapPointStraightEnabled = true, \n// Animations\nopenAnimationConfig = {\n    timing: { duration: 240, easing: react_native_1.Easing.ease },\n    spring: { speed: 14, bounciness: 4 },\n}, closeAnimationConfig = {\n    timing: { duration: 240, easing: react_native_1.Easing.ease },\n}, dragToss = 0.18, threshold = 120, velocity = 2800, panGestureAnimatedValue, useNativeDriver = true, \n// Elements visibilities\nwithReactModal = false, reactModalProps, withHandle = true, withOverlay = true, \n// Additional components\nHeaderComponent, FooterComponent, FloatingComponent, \n// Callbacks\nonOpen, onOpened, onClose, onClosed, onBackButtonPress, onPositionChange, onOverlayPress, onLayout, }, ref) => {\n    const { height: screenHeight } = use_dimensions_1.useDimensions();\n    const isHandleOutside = handlePosition === 'outside';\n    const handleHeight = withHandle ? 20 : isHandleOutside ? 35 : 20;\n    const fullHeight = screenHeight - modalTopOffset;\n    const computedHeight = fullHeight - handleHeight - (devices_1.isIphoneX ? 34 : 0);\n    const endHeight = modalHeight || computedHeight;\n    const adjustValue = adjustToContentHeight ? undefined : endHeight;\n    const snaps = snapPoint ? [0, endHeight - snapPoint, endHeight] : [0, endHeight];\n    const [modalHeightValue, setModalHeightValue] = React.useState(adjustValue);\n    const [lastSnap, setLastSnap] = React.useState(snapPoint ? endHeight - snapPoint : 0);\n    const [isVisible, setIsVisible] = React.useState(false);\n    const [showContent, setShowContent] = React.useState(true);\n    const [enableBounces, setEnableBounces] = React.useState(true);\n    const [keyboardToggle, setKeyboardToggle] = React.useState(false);\n    const [keyboardHeight, setKeyboardHeight] = React.useState(0);\n    const [disableScroll, setDisableScroll] = React.useState(alwaysOpen || snapPoint ? true : undefined);\n    const [beginScrollYValue, setBeginScrollYValue] = React.useState(0);\n    const [modalPosition, setModalPosition] = React.useState('initial');\n    const [cancelClose, setCancelClose] = React.useState(false);\n    const [layouts, setLayouts] = React.useState(new Map());\n    const cancelTranslateY = React.useRef(new react_native_1.Animated.Value(1)).current; // 1 by default to have the translateY animation running\n    const componentTranslateY = React.useRef(new react_native_1.Animated.Value(0)).current;\n    const overlay = React.useRef(new react_native_1.Animated.Value(0)).current;\n    const beginScrollY = React.useRef(new react_native_1.Animated.Value(0)).current;\n    const dragY = React.useRef(new react_native_1.Animated.Value(0)).current;\n    const translateY = React.useRef(new react_native_1.Animated.Value(screenHeight)).current;\n    const reverseBeginScrollY = React.useRef(react_native_1.Animated.multiply(new react_native_1.Animated.Value(-1), beginScrollY))\n        .current;\n    const tapGestureModalizeRef = React.useRef(null);\n    const panGestureChildrenRef = React.useRef(null);\n    const nativeViewChildrenRef = React.useRef(null);\n    const contentViewRef = React.useRef(null);\n    const tapGestureOverlayRef = React.useRef(null);\n    const backButtonListenerRef = React.useRef(null);\n    // We diff and get the negative value only. It sometimes go above 0\n    // (e.g. 1.5) and creates the flickering on Modalize for a ms\n    const diffClamp = react_native_1.Animated.diffClamp(reverseBeginScrollY, -screenHeight, 0);\n    const componentDragEnabled = componentTranslateY._value === 1;\n    // When we have a scrolling happening in the ScrollView, we don't want to translate\n    // the modal down. We either multiply by 0 to cancel the animation, or 1 to proceed.\n    const dragValue = react_native_1.Animated.add(react_native_1.Animated.multiply(dragY, componentDragEnabled ? 1 : cancelTranslateY), diffClamp);\n    const value = react_native_1.Animated.add(react_native_1.Animated.multiply(translateY, componentDragEnabled ? 1 : cancelTranslateY), dragValue);\n    let willCloseModalize = false;\n    const handleBackPress = () => {\n        if (alwaysOpen) {\n            return false;\n        }\n        if (onBackButtonPress) {\n            return onBackButtonPress();\n        }\n        else {\n            handleClose();\n        }\n        return true;\n    };\n    const handleKeyboardShow = (event) => {\n        const { height } = event.endCoordinates;\n        setKeyboardToggle(true);\n        setKeyboardHeight(height);\n    };\n    const handleKeyboardHide = () => {\n        setKeyboardToggle(false);\n        setKeyboardHeight(0);\n    };\n    const handleAnimateOpen = (alwaysOpenValue, dest = 'default') => {\n        const { timing, spring } = openAnimationConfig;\n        backButtonListenerRef.current = react_native_1.BackHandler.addEventListener('hardwareBackPress', handleBackPress);\n        let toValue = 0;\n        let toPanValue = 0;\n        let newPosition;\n        if (dest === 'top') {\n            toValue = 0;\n        }\n        else if (alwaysOpenValue) {\n            toValue = (modalHeightValue || 0) - alwaysOpenValue;\n        }\n        else if (snapPoint) {\n            toValue = (modalHeightValue || 0) - snapPoint;\n        }\n        if (panGestureAnimatedValue && (alwaysOpenValue || snapPoint)) {\n            toPanValue = 0;\n        }\n        else if (panGestureAnimatedValue &&\n            !alwaysOpenValue &&\n            (dest === 'top' || dest === 'default')) {\n            toPanValue = 1;\n        }\n        setIsVisible(true);\n        setShowContent(true);\n        if ((alwaysOpenValue && dest !== 'top') || (snapPoint && dest === 'default')) {\n            newPosition = 'initial';\n        }\n        else {\n            newPosition = 'top';\n        }\n        react_native_1.Animated.parallel([\n            react_native_1.Animated.timing(overlay, {\n                toValue: alwaysOpenValue && dest === 'default' ? 0 : 1,\n                duration: timing.duration,\n                easing: react_native_1.Easing.ease,\n                useNativeDriver: USE_NATIVE_DRIVER,\n            }),\n            panGestureAnimatedValue\n                ? react_native_1.Animated.timing(panGestureAnimatedValue, {\n                    toValue: toPanValue,\n                    duration: PAN_DURATION,\n                    easing: react_native_1.Easing.ease,\n                    useNativeDriver,\n                })\n                : react_native_1.Animated.delay(0),\n            spring\n                ? react_native_1.Animated.spring(translateY, Object.assign(Object.assign({}, get_spring_config_1.getSpringConfig(spring)), { toValue, useNativeDriver: USE_NATIVE_DRIVER }))\n                : react_native_1.Animated.timing(translateY, {\n                    toValue,\n                    duration: timing.duration,\n                    easing: timing.easing,\n                    useNativeDriver: USE_NATIVE_DRIVER,\n                }),\n        ]).start(() => {\n            if (onOpened) {\n                onOpened();\n            }\n            setModalPosition(newPosition);\n            if (onPositionChange) {\n                onPositionChange(newPosition);\n            }\n        });\n    };\n    const handleAnimateClose = (dest = 'default', callback) => {\n        var _a;\n        const { timing, spring } = closeAnimationConfig;\n        const lastSnapValue = snapPoint ? snaps[1] : 80;\n        const toInitialAlwaysOpen = dest === 'alwaysOpen' && Boolean(alwaysOpen);\n        const toValue = toInitialAlwaysOpen && alwaysOpen ? (modalHeightValue || 0) - alwaysOpen : screenHeight;\n        (_a = backButtonListenerRef.current) === null || _a === void 0 ? void 0 : _a.remove();\n        cancelTranslateY.setValue(1);\n        setBeginScrollYValue(0);\n        beginScrollY.setValue(0);\n        react_native_1.Animated.parallel([\n            react_native_1.Animated.timing(overlay, {\n                toValue: 0,\n                duration: timing.duration,\n                easing: react_native_1.Easing.ease,\n                useNativeDriver: USE_NATIVE_DRIVER,\n            }),\n            panGestureAnimatedValue\n                ? react_native_1.Animated.timing(panGestureAnimatedValue, {\n                    toValue: 0,\n                    duration: PAN_DURATION,\n                    easing: react_native_1.Easing.ease,\n                    useNativeDriver,\n                })\n                : react_native_1.Animated.delay(0),\n            spring\n                ? react_native_1.Animated.spring(translateY, Object.assign(Object.assign({}, get_spring_config_1.getSpringConfig(spring)), { toValue, useNativeDriver: USE_NATIVE_DRIVER }))\n                : react_native_1.Animated.timing(translateY, {\n                    duration: timing.duration,\n                    easing: react_native_1.Easing.out(react_native_1.Easing.ease),\n                    toValue,\n                    useNativeDriver: USE_NATIVE_DRIVER,\n                }),\n        ]).start(() => {\n            if (onClosed) {\n                onClosed();\n            }\n            if (callback) {\n                callback();\n            }\n            if (alwaysOpen && dest === 'alwaysOpen' && onPositionChange) {\n                onPositionChange('initial');\n            }\n            if (alwaysOpen && dest === 'alwaysOpen') {\n                setModalPosition('initial');\n            }\n            setShowContent(toInitialAlwaysOpen);\n            translateY.setValue(toValue);\n            dragY.setValue(0);\n            willCloseModalize = false;\n            setLastSnap(lastSnapValue);\n            setIsVisible(toInitialAlwaysOpen);\n        });\n    };\n    const handleModalizeContentLayout = ({ nativeEvent: { layout } }) => {\n        const value = Math.min(layout.height + (!adjustToContentHeight || keyboardHeight ? layout.y : 0), endHeight -\n            react_native_1.Platform.select({\n                ios: 0,\n                android: keyboardHeight,\n                default: 0,\n            }));\n        setModalHeightValue(value);\n    };\n    const handleBaseLayout = (component, height) => {\n        setLayouts(new Map(layouts.set(component, height)));\n        const max = Array.from(layouts).reduce((acc, cur) => acc + (cur === null || cur === void 0 ? void 0 : cur[1]), 0);\n        const maxFixed = +max.toFixed(3);\n        const endHeightFixed = +endHeight.toFixed(3);\n        const shorterHeight = maxFixed < endHeightFixed;\n        setDisableScroll(shorterHeight && disableScrollIfPossible);\n    };\n    const handleContentLayout = ({ nativeEvent }) => {\n        if (onLayout) {\n            onLayout(nativeEvent);\n        }\n        if (alwaysOpen && adjustToContentHeight) {\n            const { height } = nativeEvent.layout;\n            return setModalHeightValue(height);\n        }\n        // We don't want to disable the scroll if we are not using adjustToContentHeight props\n        if (!adjustToContentHeight) {\n            return;\n        }\n        handleBaseLayout('content', nativeEvent.layout.height);\n    };\n    const handleComponentLayout = ({ nativeEvent }, name, absolute) => {\n        /**\n         * We don't want to disable the scroll if we are not using adjustToContentHeight props.\n         * Also, if the component is in absolute positioning we don't want to take in\n         * account its dimensions, so we just skip.\n         */\n        if (!adjustToContentHeight || absolute) {\n            return;\n        }\n        handleBaseLayout(name, nativeEvent.layout.height);\n    };\n    const handleClose = (dest, callback) => {\n        if (onClose) {\n            onClose();\n        }\n        handleAnimateClose(dest, callback);\n    };\n    const handleChildren = ({ nativeEvent }, type) => {\n        const { timing } = closeAnimationConfig;\n        const { velocityY, translationY } = nativeEvent;\n        const negativeReverseScroll = modalPosition === 'top' &&\n            beginScrollYValue >= (snapPoint ? 0 : SCROLL_THRESHOLD) &&\n            translationY < 0;\n        const thresholdProps = translationY > threshold && beginScrollYValue === 0;\n        const closeThreshold = velocity\n            ? (beginScrollYValue <= 20 && velocityY >= velocity) || thresholdProps\n            : thresholdProps;\n        let enableBouncesValue = true;\n        // We make sure to reset the value if we are dragging from the children\n        if (type !== 'component' && cancelTranslateY._value === 0) {\n            componentTranslateY.setValue(0);\n        }\n        /*\n         * When the pan gesture began we check the position of the ScrollView \"cursor\".\n         * We cancel the translation animation if the ScrollView is not scrolled to the top\n         */\n        if (nativeEvent.oldState === react_native_gesture_handler_1.State.BEGAN) {\n            setCancelClose(false);\n            if (!closeSnapPointStraightEnabled && snapPoint\n                ? beginScrollYValue > 0\n                : beginScrollYValue > 0 || negativeReverseScroll) {\n                setCancelClose(true);\n                translateY.setValue(0);\n                dragY.setValue(0);\n                cancelTranslateY.setValue(0);\n                enableBouncesValue = true;\n            }\n            else {\n                cancelTranslateY.setValue(1);\n                enableBouncesValue = false;\n                if (!tapGestureEnabled) {\n                    setDisableScroll((Boolean(snapPoint) || Boolean(alwaysOpen)) && modalPosition === 'initial');\n                }\n            }\n        }\n        setEnableBounces(devices_1.isAndroid\n            ? false\n            : alwaysOpen\n                ? beginScrollYValue > 0 || translationY < 0\n                : enableBouncesValue);\n        if (nativeEvent.oldState === react_native_gesture_handler_1.State.ACTIVE) {\n            const toValue = translationY - beginScrollYValue;\n            let destSnapPoint = 0;\n            if (snapPoint || alwaysOpen) {\n                const endOffsetY = lastSnap + toValue + dragToss * velocityY;\n                /**\n                 * snapPoint and alwaysOpen use both an array of points to define the first open state and the final state.\n                 */\n                snaps.forEach((snap) => {\n                    const distFromSnap = Math.abs(snap - endOffsetY);\n                    const diffPoint = Math.abs(destSnapPoint - endOffsetY);\n                    // For snapPoint\n                    if (distFromSnap < diffPoint && !alwaysOpen) {\n                        if (closeSnapPointStraightEnabled) {\n                            if (modalPosition === 'initial' && negativeReverseScroll) {\n                                destSnapPoint = snap;\n                                willCloseModalize = false;\n                            }\n                            if (snap === endHeight) {\n                                destSnapPoint = snap;\n                                willCloseModalize = true;\n                                handleClose();\n                            }\n                        }\n                        else {\n                            destSnapPoint = snap;\n                            willCloseModalize = false;\n                            if (snap === endHeight) {\n                                willCloseModalize = true;\n                                handleClose();\n                            }\n                        }\n                    }\n                    // For alwaysOpen props\n                    if (distFromSnap < diffPoint && alwaysOpen && beginScrollYValue <= 0) {\n                        destSnapPoint = (modalHeightValue || 0) - alwaysOpen;\n                        willCloseModalize = false;\n                    }\n                });\n            }\n            else if (closeThreshold && !alwaysOpen && !cancelClose) {\n                willCloseModalize = true;\n                handleClose();\n            }\n            if (willCloseModalize) {\n                return;\n            }\n            setLastSnap(destSnapPoint);\n            translateY.extractOffset();\n            translateY.setValue(toValue);\n            translateY.flattenOffset();\n            dragY.setValue(0);\n            if (alwaysOpen) {\n                react_native_1.Animated.timing(overlay, {\n                    toValue: Number(destSnapPoint <= 0),\n                    duration: timing.duration,\n                    easing: react_native_1.Easing.ease,\n                    useNativeDriver: USE_NATIVE_DRIVER,\n                }).start();\n            }\n            react_native_1.Animated.spring(translateY, {\n                tension: 50,\n                friction: 12,\n                velocity: velocityY,\n                toValue: destSnapPoint,\n                useNativeDriver: USE_NATIVE_DRIVER,\n            }).start();\n            if (beginScrollYValue <= 0) {\n                const modalPositionValue = destSnapPoint <= 0 ? 'top' : 'initial';\n                if (panGestureAnimatedValue) {\n                    react_native_1.Animated.timing(panGestureAnimatedValue, {\n                        toValue: Number(modalPositionValue === 'top'),\n                        duration: PAN_DURATION,\n                        easing: react_native_1.Easing.ease,\n                        useNativeDriver,\n                    }).start();\n                }\n                if (!adjustToContentHeight && modalPositionValue === 'top') {\n                    setDisableScroll(false);\n                }\n                if (onPositionChange && modalPosition !== modalPositionValue) {\n                    onPositionChange(modalPositionValue);\n                }\n                if (modalPosition !== modalPositionValue) {\n                    setModalPosition(modalPositionValue);\n                }\n            }\n        }\n    };\n    const handleComponent = ({ nativeEvent }) => {\n        // If we drag from the HeaderComponent/FooterComponent/FloatingComponent we allow the translation animation\n        if (nativeEvent.oldState === react_native_gesture_handler_1.State.BEGAN) {\n            componentTranslateY.setValue(1);\n            beginScrollY.setValue(0);\n        }\n        handleChildren({ nativeEvent }, 'component');\n    };\n    const handleOverlay = ({ nativeEvent }) => {\n        if (nativeEvent.oldState === react_native_gesture_handler_1.State.ACTIVE && !willCloseModalize) {\n            if (onOverlayPress) {\n                onOverlayPress();\n            }\n            const dest = !!alwaysOpen ? 'alwaysOpen' : 'default';\n            handleClose(dest);\n        }\n    };\n    const handleGestureEvent = react_native_1.Animated.event([{ nativeEvent: { translationY: dragY } }], {\n        useNativeDriver: USE_NATIVE_DRIVER,\n        listener: ({ nativeEvent: { translationY } }) => {\n            var _a;\n            if (panGestureAnimatedValue) {\n                const offset = (_a = alwaysOpen !== null && alwaysOpen !== void 0 ? alwaysOpen : snapPoint) !== null && _a !== void 0 ? _a : 0;\n                const diff = Math.abs(translationY / (endHeight - offset));\n                const y = translationY <= 0 ? diff : 1 - diff;\n                let value;\n                if (modalPosition === 'initial' && translationY > 0) {\n                    value = 0;\n                }\n                else if (modalPosition === 'top' && translationY <= 0) {\n                    value = 1;\n                }\n                else {\n                    value = y;\n                }\n                panGestureAnimatedValue.setValue(value);\n            }\n        },\n    });\n    const renderHandle = () => {\n        const handleStyles = [styles_1.default.handle];\n        const shapeStyles = [styles_1.default.handle__shape, handleStyle];\n        if (!withHandle) {\n            return null;\n        }\n        if (!isHandleOutside) {\n            handleStyles.push(styles_1.default.handleBottom);\n            shapeStyles.push(styles_1.default.handle__shapeBottom, handleStyle);\n        }\n        return (React.createElement(react_native_gesture_handler_1.PanGestureHandler, { enabled: panGestureEnabled, simultaneousHandlers: tapGestureModalizeRef, shouldCancelWhenOutside: false, onGestureEvent: handleGestureEvent, onHandlerStateChange: handleComponent },\n            React.createElement(react_native_1.Animated.View, { style: handleStyles },\n                React.createElement(react_native_1.View, { style: shapeStyles }))));\n    };\n    const renderElement = (Element) => typeof Element === 'function' ? Element() : Element;\n    const renderComponent = (component, name) => {\n        var _a;\n        if (!component) {\n            return null;\n        }\n        const tag = renderElement(component);\n        /**\n         * Nesting Touchable/ScrollView components with RNGH PanGestureHandler cancels the inner events.\n         * Until a better solution lands in RNGH, I will disable the PanGestureHandler for Android only,\n         * so inner touchable/gestures are working from the custom components you can pass in.\n         */\n        if (devices_1.isAndroid && !panGestureComponentEnabled) {\n            return tag;\n        }\n        const obj = react_native_1.StyleSheet.flatten((_a = tag === null || tag === void 0 ? void 0 : tag.props) === null || _a === void 0 ? void 0 : _a.style);\n        const absolute = (obj === null || obj === void 0 ? void 0 : obj.position) === 'absolute';\n        const zIndex = obj === null || obj === void 0 ? void 0 : obj.zIndex;\n        return (React.createElement(react_native_gesture_handler_1.PanGestureHandler, { enabled: panGestureEnabled, shouldCancelWhenOutside: false, onGestureEvent: handleGestureEvent, onHandlerStateChange: handleComponent },\n            React.createElement(react_native_1.Animated.View, { style: { zIndex }, onLayout: (e) => handleComponentLayout(e, name, absolute) }, tag)));\n    };\n    const renderContent = () => {\n        var _a;\n        const keyboardDismissMode = devices_1.isIos ? 'interactive' : 'on-drag';\n        const passedOnProps = (_a = flatListProps !== null && flatListProps !== void 0 ? flatListProps : sectionListProps) !== null && _a !== void 0 ? _a : scrollViewProps;\n        // We allow overwrites when the props (bounces, scrollEnabled) are set to false, when true we use Modalize's core behavior\n        const bounces = (passedOnProps === null || passedOnProps === void 0 ? void 0 : passedOnProps.bounces) !== undefined && !(passedOnProps === null || passedOnProps === void 0 ? void 0 : passedOnProps.bounces)\n            ? passedOnProps === null || passedOnProps === void 0 ? void 0 : passedOnProps.bounces : enableBounces;\n        const scrollEnabled = (passedOnProps === null || passedOnProps === void 0 ? void 0 : passedOnProps.scrollEnabled) !== undefined && !(passedOnProps === null || passedOnProps === void 0 ? void 0 : passedOnProps.scrollEnabled)\n            ? passedOnProps === null || passedOnProps === void 0 ? void 0 : passedOnProps.scrollEnabled : keyboardToggle || !disableScroll;\n        const scrollEventThrottle = (passedOnProps === null || passedOnProps === void 0 ? void 0 : passedOnProps.scrollEventThrottle) || 16;\n        const onScrollBeginDrag = passedOnProps === null || passedOnProps === void 0 ? void 0 : passedOnProps.onScrollBeginDrag;\n        const opts = {\n            ref: compose_refs_1.composeRefs(contentViewRef, contentRef),\n            bounces,\n            onScrollBeginDrag: react_native_1.Animated.event([{ nativeEvent: { contentOffset: { y: beginScrollY } } }], {\n                useNativeDriver: USE_NATIVE_DRIVER,\n                listener: onScrollBeginDrag,\n            }),\n            scrollEventThrottle,\n            onLayout: handleContentLayout,\n            scrollEnabled,\n            keyboardDismissMode,\n        };\n        if (flatListProps) {\n            return React.createElement(react_native_1.Animated.FlatList, Object.assign({}, flatListProps, opts));\n        }\n        if (sectionListProps) {\n            return React.createElement(react_native_1.Animated.SectionList, Object.assign({}, sectionListProps, opts));\n        }\n        if (customRenderer) {\n            const tag = renderElement(customRenderer);\n            return React.cloneElement(tag, Object.assign({}, opts));\n        }\n        return (React.createElement(react_native_1.Animated.ScrollView, Object.assign({}, scrollViewProps, opts), children));\n    };\n    const renderChildren = () => {\n        const style = adjustToContentHeight ? styles_1.default.content__adjustHeight : styles_1.default.content__container;\n        const minDist = libraries_1.isRNGH2() ? undefined : ACTIVATED;\n        return (React.createElement(react_native_gesture_handler_1.PanGestureHandler, { ref: panGestureChildrenRef, enabled: panGestureEnabled, simultaneousHandlers: [nativeViewChildrenRef, tapGestureModalizeRef], shouldCancelWhenOutside: false, onGestureEvent: handleGestureEvent, minDist: minDist, activeOffsetY: ACTIVATED, activeOffsetX: ACTIVATED, onHandlerStateChange: handleChildren },\n            React.createElement(react_native_1.Animated.View, { style: [style, childrenStyle] },\n                React.createElement(react_native_gesture_handler_1.NativeViewGestureHandler, { ref: nativeViewChildrenRef, waitFor: tapGestureModalizeRef, simultaneousHandlers: panGestureChildrenRef }, renderContent()))));\n    };\n    const renderOverlay = () => {\n        const pointerEvents = alwaysOpen && (modalPosition === 'initial' || !modalPosition) ? 'box-none' : 'auto';\n        return (React.createElement(react_native_gesture_handler_1.PanGestureHandler, { enabled: panGestureEnabled, simultaneousHandlers: tapGestureModalizeRef, shouldCancelWhenOutside: false, onGestureEvent: handleGestureEvent, onHandlerStateChange: handleChildren },\n            React.createElement(react_native_1.Animated.View, { style: styles_1.default.overlay, pointerEvents: pointerEvents }, showContent && (React.createElement(react_native_gesture_handler_1.TapGestureHandler, { ref: tapGestureOverlayRef, enabled: closeOnOverlayTap !== undefined ? closeOnOverlayTap : panGestureEnabled, onHandlerStateChange: handleOverlay },\n                React.createElement(react_native_1.Animated.View, { style: [\n                        styles_1.default.overlay__background,\n                        overlayStyle,\n                        {\n                            opacity: overlay.interpolate({\n                                inputRange: [0, 1],\n                                outputRange: [0, 1],\n                            }),\n                        },\n                    ], pointerEvents: pointerEvents }))))));\n    };\n    React.useImperativeHandle(ref, () => ({\n        open(dest) {\n            if (onOpen) {\n                onOpen();\n            }\n            handleAnimateOpen(alwaysOpen, dest);\n        },\n        close(dest, callback) {\n            handleClose(dest, callback);\n        },\n    }));\n    React.useEffect(() => {\n        if (alwaysOpen && (modalHeightValue || adjustToContentHeight)) {\n            handleAnimateOpen(alwaysOpen);\n        }\n    }, [alwaysOpen, modalHeightValue]);\n    React.useEffect(() => {\n        invariant_1.invariant(modalHeight && adjustToContentHeight, `You can't use both 'modalHeight' and 'adjustToContentHeight' props at the same time. Only choose one of the two.`);\n        invariant_1.invariant((scrollViewProps || children) && flatListProps, `You have defined 'flatListProps' along with 'scrollViewProps' or 'children' props. Remove 'scrollViewProps' or 'children' or 'flatListProps' to fix the error.`);\n        invariant_1.invariant((scrollViewProps || children) && sectionListProps, `You have defined 'sectionListProps'  along with 'scrollViewProps' or 'children' props. Remove 'scrollViewProps' or 'children' or 'sectionListProps' to fix the error.`);\n    }, [\n        modalHeight,\n        adjustToContentHeight,\n        scrollViewProps,\n        children,\n        flatListProps,\n        sectionListProps,\n    ]);\n    React.useEffect(() => {\n        setModalHeightValue(adjustValue);\n    }, [adjustToContentHeight, modalHeight, screenHeight]);\n    React.useEffect(() => {\n        let keyboardShowListener = null;\n        let keyboardHideListener = null;\n        const beginScrollYListener = beginScrollY.addListener(({ value }) => setBeginScrollYValue(value));\n        if (libraries_1.isBelowRN65) {\n            react_native_1.Keyboard.addListener('keyboardDidShow', handleKeyboardShow);\n            react_native_1.Keyboard.addListener('keyboardDidHide', handleKeyboardHide);\n        }\n        else {\n            keyboardShowListener = react_native_1.Keyboard.addListener('keyboardDidShow', handleKeyboardShow);\n            keyboardHideListener = react_native_1.Keyboard.addListener('keyboardDidHide', handleKeyboardHide);\n        }\n        return () => {\n            var _a;\n            (_a = backButtonListenerRef.current) === null || _a === void 0 ? void 0 : _a.remove();\n            beginScrollY.removeListener(beginScrollYListener);\n            if (libraries_1.isBelowRN65) {\n                react_native_1.Keyboard.removeListener('keyboardDidShow', handleKeyboardShow);\n                react_native_1.Keyboard.removeListener('keyboardDidHide', handleKeyboardHide);\n            }\n            else {\n                keyboardShowListener === null || keyboardShowListener === void 0 ? void 0 : keyboardShowListener.remove();\n                keyboardHideListener === null || keyboardHideListener === void 0 ? void 0 : keyboardHideListener.remove();\n            }\n        };\n    }, []);\n    const keyboardAvoidingViewProps = {\n        keyboardVerticalOffset: keyboardAvoidingOffset,\n        behavior: keyboardAvoidingBehavior,\n        enabled: avoidKeyboardLikeIOS,\n        style: [\n            styles_1.default.modalize__content,\n            modalStyle,\n            {\n                height: modalHeightValue,\n                maxHeight: endHeight,\n                transform: [\n                    {\n                        translateY: value.interpolate({\n                            inputRange: [-40, 0, endHeight],\n                            outputRange: [0, 0, endHeight],\n                            extrapolate: 'clamp',\n                        }),\n                    },\n                ],\n            },\n        ],\n    };\n    if (!avoidKeyboardLikeIOS && !adjustToContentHeight) {\n        keyboardAvoidingViewProps.onLayout = handleModalizeContentLayout;\n    }\n    const renderModalize = (React.createElement(react_native_1.View, { style: [styles_1.default.modalize, rootStyle], pointerEvents: alwaysOpen || !withOverlay ? 'box-none' : 'auto' },\n        React.createElement(react_native_gesture_handler_1.TapGestureHandler, { ref: tapGestureModalizeRef, maxDurationMs: tapGestureEnabled ? 100000 : 50, maxDeltaY: lastSnap, enabled: panGestureEnabled },\n            React.createElement(react_native_1.View, { style: styles_1.default.modalize__wrapper, pointerEvents: \"box-none\" },\n                showContent && (React.createElement(AnimatedKeyboardAvoidingView, Object.assign({}, keyboardAvoidingViewProps),\n                    renderHandle(),\n                    renderComponent(HeaderComponent, 'header'),\n                    renderChildren(),\n                    renderComponent(FooterComponent, 'footer'))),\n                withOverlay && renderOverlay())),\n        renderComponent(FloatingComponent, 'floating')));\n    const renderReactModal = (child) => (React.createElement(react_native_1.Modal, Object.assign({}, reactModalProps, { supportedOrientations: ['landscape', 'portrait', 'portrait-upside-down'], onRequestClose: handleBackPress, hardwareAccelerated: USE_NATIVE_DRIVER, visible: isVisible, transparent: true }), child));\n    if (!isVisible) {\n        return null;\n    }\n    if (withReactModal) {\n        return renderReactModal(renderModalize);\n    }\n    return renderModalize;\n};\nexports.Modalize = React.forwardRef(ModalizeBase);\n"]},"metadata":{},"sourceType":"script"}