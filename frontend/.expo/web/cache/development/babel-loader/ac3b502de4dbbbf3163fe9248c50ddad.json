{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/charlotteteo/Downloads/cz2006final/craapy_swe_proj_frontend/frontend/screens/InfoScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { Avatar, Card, Title, Paragraph, IconButton } from \"react-native-paper\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport SearchScreen from \"./home/search/SearchScreen\";\nimport FilterScreen from \"./home/filter/FilterScreen\";\nimport ResultsScreen from \"./ResultsScreen\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport NearbyCarparkMapsScreen from \"./maps/NearbyCarparkMapsScreen\";\nimport * as WebBrowser from 'expo-web-browser';\n\nfunction InfoScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var path = route.params.path;\n  console.log(path);\n\n  var getMovies = function getMovies() {\n    var response, json;\n    return _regeneratorRuntime.async(function getMovies$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch('http://localhost:8080/search/' + path));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            json = _context.sent;\n            setData(json);\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 13:\n            _context.prev = 13;\n            setLoading(false);\n            return _context.finish(13);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10, 13, 16]], Promise);\n  };\n\n  useEffect(function () {\n    getMovies();\n  }, []);\n\n  var List = function List() {\n    return data.map(function (element) {\n      address = 'https://www.google.com/maps?saddr=My+Location&daddr=' + element.latitude_hc + ',' + element.longitude_hc;\n\n      _handleOpenWithWebBrowser = function _handleOpenWithWebBrowser() {\n        WebBrowser.openBrowserAsync(address);\n      };\n\n      return React.createElement(SafeAreaView, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 12\n        }\n      }, React.createElement(Card, {\n        style: {\n          backgroundColor: \"#FFB899\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }, React.createElement(Card.Content, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.paragraph,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }\n      }, element.name), React.createElement(Card.Cover, {\n        source: {\n          uri: element.thumbnail\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }), React.createElement(Text, {\n        style: styles.infotext,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }, React.createElement(ImageBackground, {\n        style: styles.small,\n        source: require(\"../assets/star.png\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }\n      }), \" \", \" \", \": \", element.rating, \" % \", \"\\n\", React.createElement(ImageBackground, {\n        style: styles.small,\n        source: require(\"../assets/location.png\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }\n      }), \" \", \" \", \": \", element.hawkercentrename, \" \", \"\\n\", React.createElement(ImageBackground, {\n        style: styles.small,\n        source: require(\"../assets/time.png\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }\n      }), \"  \", \" \", \" : \", element.operationhours, \"\\n\"))), React.createElement(Text, {\n        style: styles.infotext,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, React.createElement(Image, {\n        style: styles.small,\n        source: require(\"../assets/direction.png\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      }), \" \", \" \", \" Directions:\"), React.createElement(View, {\n        style: {\n          flexDirection: \"row\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: _this._handleOpenWithWebBrowser,\n        style: styles.button,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }\n      }, React.createElement(Image, {\n        style: styles.med,\n        source: require(\"../assets/bus.png\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        style: styles.infotext,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 12\n        }\n      }, \"Public Transport\")), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          navigation.navigate(\"NearbyCarparkMapsScreen\", {\n            latitude: element.latitude_hc,\n            longitude: element.longitude_hc\n          });\n        },\n        style: styles.button,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }\n      }, React.createElement(Image, {\n        style: styles.med,\n        source: require(\"../assets/car.png\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        style: styles.infotext,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 12\n        }\n      }, \"Car\")), React.createElement(TouchableOpacity, {\n        onPress: _this._handleOpenWithWebBrowser,\n        style: styles.button,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }\n      }, React.createElement(Image, {\n        style: styles.med,\n        source: require(\"../assets/walking.png\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        style: styles.infotext,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 12\n        }\n      }, \"Walking\"))));\n    });\n  };\n\n  return React.createElement(SafeAreaView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 3\n    }\n  }, List());\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#FEE0D4\"\n  },\n  paragraph: {\n    margin: 24,\n    marginTop: 0,\n    fontSize: 25,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    color: 'red'\n  },\n  infotext: {\n    color: \"black\",\n    fontWeight: 'bold',\n    textAlign: 'center',\n    fontSize: 15\n  },\n  logo: {\n    height: 128,\n    width: 128\n  },\n  med: {\n    height: 50,\n    width: 50\n  },\n  small: {\n    height: 10,\n    width: 10\n  },\n  button: {\n    backgroundColor: \"pink\",\n    height: \"50%\",\n    width: \"22%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    margin: 10,\n    borderRadius: 20\n  }\n});\nvar Stack = createStackNavigator();\nexport default function stacker() {\n  return React.createElement(Stack.Navigator, {\n    headerMode: \"float\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Info\",\n    component: InfoScreen,\n    options: {\n      headerBackTitleVisible: false,\n      headerTitle: false,\n      headerTransparent: true,\n      headerTintColor: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"NearbyCarparkMapsScreen\",\n    component: NearbyCarparkMapsScreen,\n    options: {\n      headerBackTitleVisible: false,\n      headerTitle: false,\n      headerTransparent: true,\n      headerTintColor: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 8\n    }\n  }));\n}\nmodule.exports = InfoScreen;","map":{"version":3,"sources":["/Users/charlotteteo/Downloads/cz2006final/craapy_swe_proj_frontend/frontend/screens/InfoScreen.js"],"names":["React","useEffect","useState","Avatar","Card","Title","Paragraph","IconButton","createStackNavigator","SearchScreen","FilterScreen","ResultsScreen","NavigationContainer","NearbyCarparkMapsScreen","WebBrowser","InfoScreen","navigation","route","isLoading","setLoading","data","setData","path","params","console","log","getMovies","fetch","response","json","error","List","map","element","address","latitude_hc","longitude_hc","_handleOpenWithWebBrowser","openBrowserAsync","backgroundColor","styles","paragraph","name","uri","thumbnail","infotext","small","require","rating","hawkercentrename","operationhours","flexDirection","button","med","navigate","latitude","longitude","StyleSheet","create","container","margin","marginTop","fontSize","fontWeight","textAlign","color","logo","height","width","alignItems","justifyContent","borderRadius","Stack","stacker","headerBackTitleVisible","headerTitle","headerTransparent","headerTintColor","module","exports"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  StyleSheet,\n  View,\n  Text,\n  Dimensions,\n Button,\n Image,\n SafeAreaView,\n ImageBackground,\n ScrollView,\n TouchableOpacity,\n Pressable\n} from 'react-native';\nimport {\n  Avatar,\n  Card,\n  Title,\n  Paragraph,\n  IconButton,\n} from \"react-native-paper\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport SearchScreen from \"./home/search/SearchScreen\";\nimport FilterScreen from \"./home/filter/FilterScreen\";\nimport ResultsScreen from \"./ResultsScreen\"\nimport { NavigationContainer } from '@react-navigation/native';\nimport NearbyCarparkMapsScreen from \"./maps/NearbyCarparkMapsScreen\";\nimport * as WebBrowser from 'expo-web-browser';\n\nfunction InfoScreen ({ navigation,route}){\n  \n  const [isLoading, setLoading] = useState(true);\n  const [data, setData] = useState([]);\n  const {path}=route.params;\n  console.log(path)\n  const getMovies = async () => {\n     try {\n      // const response = await fetch('http://localhost:8080/search/De Sheng Shou Gong Mian Yu Tang');\n\n      const response = await fetch('http://localhost:8080/search/'+path);\n      const json = await response.json();\n  \n      setData(json);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    getMovies();\n  }, []);\n\n  const List = () => {\n   return data.map((element) => {\n    address= 'https://www.google.com/maps?saddr=My+Location&daddr='+element.latitude_hc+','+element.longitude_hc\n    _handleOpenWithWebBrowser = () => {\n      WebBrowser.openBrowserAsync(address);\n    };\n    return (\n      \n           <SafeAreaView >\n          <Card style= {{backgroundColor: \"#FFB899\"}}>\n          <Card.Content>\n              {/* <View key={element.key} style={{margin: 10}}> */}\n                <Text  style={styles.paragraph}>\n                  {element.name}\n                  </Text>\n                <Card.Cover source={{ uri: element.thumbnail }} />\n                <Text style={styles.infotext}> \n                <ImageBackground style={styles.small} source={require('../assets/star.png')} /> {\" \"}: {element.rating} % {\"\\n\"}  \n                <ImageBackground style={styles.small} source={require('../assets/location.png')} /> {\" \"}: {element.hawkercentrename} {\"\\n\"}  \n                <ImageBackground style={styles.small} source={require('../assets/time.png')} />  {\" \"} : {element.operationhours}{\"\\n\"} \n  \n                </Text>\n          </Card.Content>\n</Card>\n\n          <Text  style={styles.infotext}>    \n          <Image style={styles.small} source={require('../assets/direction.png')} /> {\" \"} Directions:\n          </Text >\n          <View style={{ flexDirection:\"row\" }}>\n          <TouchableOpacity onPress={this._handleOpenWithWebBrowser}  \n          style={styles.button}>\n          <Image style={styles.med} source={require('../assets/bus.png')} />\n           <Text style={styles.infotext}>\n            Public Transport\n           </Text>\n          </TouchableOpacity>\n          <TouchableOpacity onPress={()=>{\n            navigation.navigate(\"NearbyCarparkMapsScreen\",{latitude:element.latitude_hc,longitude:element.longitude_hc})\n\n            // navigation.navigate(\"NearbyCarparkMapsScreen\",{latitude:element.hc_latitude,longitude:element.hc_longitude,})\n                   \n          }}\n          style={styles.button}>\n          <Image style={styles.med} source={require('../assets/car.png')} />\n           <Text style={styles.infotext}>\n            Car\n           </Text>\n          </TouchableOpacity >\n          <TouchableOpacity onPress={this._handleOpenWithWebBrowser} \n          style={styles.button}>\n          <Image style={styles.med} source={require('../assets/walking.png')} />\n           <Text style={styles.infotext}>\n            Walking\n           </Text>\n          </TouchableOpacity>\n          </View>\n          </SafeAreaView>\n    \n   );\n  });\n};\n\n\nreturn (\n  <SafeAreaView>\n   {List()}\n\n  </SafeAreaView>\n);\n  \n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#FEE0D4\"\n  },\n  paragraph: {\n    margin: 24,\n    marginTop: 0,\n    fontSize: 25,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    color : 'red',\n  },\n  infotext: {\n    color: \"black\",\n    fontWeight: 'bold',\n    textAlign: 'center',\n    fontSize: 15,\n  },\n  logo: {\n    height: 128,\n    width: 128,\n  },\n  med:{\n    height: 50,\n    width: 50,\n  },\n  small: {\n    height: 10, \n    width: 10,\n  },\n  button: {         // tbh doesnt matter a lot haha\n    backgroundColor: \"pink\", // dark mode: #303337\n    height: \"50%\",\n    width: \"22%\",\n    alignItems: \"center\",\n    justifyContent:\"center\",\n    margin: 10,\n    borderRadius: 20\n  },\n  \n});\n\nconst Stack = createStackNavigator();\nexport default function stacker() {\n  return (\n    <Stack.Navigator headerMode=\"float\">\n{/* \n    <Stack.Screen name=\"ResultsScreen\" component={ResultsScreen} /> */}\n      <Stack.Screen name=\"Info\" component={InfoScreen} \n      options={{\n                headerBackTitleVisible:false,\n                headerTitle:false,\n                headerTransparent:true,\n                headerTintColor:'#fff'\n            }}/>\n       <Stack.Screen name=\"NearbyCarparkMapsScreen\" component={NearbyCarparkMapsScreen} \n      options={{\n                headerBackTitleVisible:false,\n                headerTitle:false,\n                headerTransparent:true,\n                headerTintColor:'#fff'\n            }}/>\n    </Stack.Navigator>\n  );\n}\n\nmodule.exports = InfoScreen;"]},"metadata":{},"sourceType":"module"}