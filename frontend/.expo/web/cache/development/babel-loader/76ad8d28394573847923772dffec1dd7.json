{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\yipin\\\\OneDrive - Nanyang Technological University\\\\Desktop\\\\Computing\\\\CZ2006 Software Engineering\\\\Project3\\\\craapy_swe_proj_frontend-charlotte_main\\\\frontend\\\\screens\\\\maps\\\\CarparkMapsScreen.js\";\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { Avatar, Card, Title, Paragraph, IconButton } from \"react-native-paper\";\nimport * as WebBrowser from 'expo-web-browser';\nimport { carparksavailable } from \"../../assets/carparksavailability\";\nimport MapView, { MAP_TYPES, PROVIDER_DEFAULT, PROVIDER_GOOGLE } from 'react-native-maps';\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport RBSheet from \"react-native-raw-bottom-sheet\";\nimport { Marker } from 'react-native-maps';\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar ASPECT_RATIO = width / height;\nvar LATITUDE = 1.3109708;\nvar LONGITUDE = 103.7861198;\nvar LATITUDE_DELTA = 0.0922;\nvar LONGITUDE_DELTA = LATITUDE_DELTA * ASPECT_RATIO;\nvar array = [{\n  key: '1',\n  title: 'example title 1',\n  subtitle: 'example subtitle 1'\n}, {\n  key: '2',\n  title: 'example title 2',\n  subtitle: 'example subtitle 2'\n}, {\n  key: '3',\n  title: 'example title 3',\n  subtitle: 'example subtitle 3'\n}];\n\nvar markers = function markers() {\n  return carparksavailable.map(function (element) {\n    return React.createElement(Marker, {\n      coordinate: {\n        latitude: element.latitude,\n        longitude: element.longitude\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    });\n  });\n};\n\nvar list = function list() {\n  return carparksavailable.map(function (element) {\n    _handleOpenWithWebBrowser = function _handleOpenWithWebBrowser() {\n      WebBrowser.openBrowserAsync(element.link);\n    };\n\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {},\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 10\n      }\n    }, React.createElement(SafeAreaView, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 12\n      }\n    }, React.createElement(Card, {\n      style: {\n        marginBottom: 10,\n        width: 350\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, React.createElement(Card.Content, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 6\n      }\n    }, React.createElement(Text, {\n      style: [{\n        fontWeight: 'light',\n        fontSize: 25\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, element.title), React.createElement(Text, {\n      style: [{\n        fontWeight: 'bold',\n        fontSize: 15\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, \"Lots Available: \", element.lotsavail), React.createElement(Pressable, {\n      style: styles.button_box,\n      onPress: _this._handleOpenWithWebBrowser,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, \"Open on Google Maps\"))))));\n  });\n};\n\nvar CarparkMapsScreen = function CarparkMapsScreen() {\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, React.createElement(MapView, {\n    showsUserLocation: true,\n    provider: PROVIDER_DEFAULT,\n    style: styles.map,\n    initialRegion: {\n      latitude: LATITUDE,\n      longitude: LONGITUDE,\n      latitudeDelta: LATITUDE_DELTA,\n      longitudeDelta: LONGITUDE_DELTA\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, React.createElement(MapView.UrlTile, {\n    urlTemplate: \"https://maps-a.onemap.sg/v3/Default/{z}/{x}/{y}.png\",\n    zIndex: -1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }), carparksavailable.map(function (element) {\n    return React.createElement(MapView.Marker, {\n      coordinate: element.coordinate,\n      title: element.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    });\n  })), React.createElement(SafeAreaView, {\n    style: {\n      flex: 1,\n      justifyContent: \"bottom\",\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    title: \"Show all Carparks\",\n    onPress: function onPress() {\n      return _this.RBSheet.open();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }), React.createElement(RBSheet, {\n    ref: function ref(_ref) {\n      _this.RBSheet = _ref;\n    },\n    height: 300,\n    openDuration: 300,\n    customStyles: {\n      container: {\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flex: 1\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, React.createElement(ScrollView, {\n    horizontal: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, list()))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  },\n  map: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  },\n  latlng: {\n    width: 200,\n    alignItems: 'stretch'\n  },\n  button: {\n    width: 100,\n    paddingHorizontal: 12,\n    alignItems: 'center',\n    marginHorizontal: 10\n  },\n  buttonContainer: {\n    marginVertical: 20,\n    backgroundColor: 'transparent'\n  },\n  button_box: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 8,\n    paddingHorizontal: 5,\n    borderRadius: 4,\n    elevation: 3,\n    backgroundColor: '#FFB899'\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white'\n  }\n});\nmodule.exports = CarparkMapsScreen;","map":{"version":3,"sources":["C:/Users/yipin/OneDrive - Nanyang Technological University/Desktop/Computing/CZ2006 Software Engineering/Project3/craapy_swe_proj_frontend-charlotte_main/frontend/screens/maps/CarparkMapsScreen.js"],"names":["React","Component","Avatar","Card","Title","Paragraph","IconButton","WebBrowser","carparksavailable","MapView","MAP_TYPES","PROVIDER_DEFAULT","PROVIDER_GOOGLE","MaterialIcons","RBSheet","Marker","Dimensions","get","width","height","ASPECT_RATIO","LATITUDE","LONGITUDE","LATITUDE_DELTA","LONGITUDE_DELTA","array","key","title","subtitle","markers","map","element","latitude","longitude","list","_handleOpenWithWebBrowser","openBrowserAsync","link","marginBottom","fontWeight","fontSize","lotsavail","styles","button_box","text","CarparkMapsScreen","container","latitudeDelta","longitudeDelta","coordinate","flex","justifyContent","alignItems","open","ref","StyleSheet","create","position","top","left","right","bottom","latlng","button","paddingHorizontal","marginHorizontal","buttonContainer","marginVertical","backgroundColor","paddingVertical","borderRadius","elevation","lineHeight","letterSpacing","color","module","exports"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport {\n  StyleSheet,\n  View,\n  Text,\n  Dimensions,\n Button,\n SafeAreaView,\n ScrollView,\n TouchableOpacity,\n Pressable\n} from 'react-native';\nimport {\n\tAvatar,\n\t\n\tCard,\n\tTitle,\n\tParagraph,\n\tIconButton,\n} from \"react-native-paper\";\nimport * as WebBrowser from 'expo-web-browser';\nimport { carparksavailable } from '../../assets/carparksavailability';\nimport MapView,  { MAP_TYPES, PROVIDER_DEFAULT,PROVIDER_GOOGLE } from 'react-native-maps';\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport RBSheet from \"react-native-raw-bottom-sheet\";\nimport { Marker } from 'react-native-maps';\n\nconst { width, height } = Dimensions.get('window');\n\nconst ASPECT_RATIO = width / height;\nconst LATITUDE =  1.3109708;\nconst LONGITUDE = 103.7861198;\nconst LATITUDE_DELTA = 0.0922;\n\nconst LONGITUDE_DELTA = LATITUDE_DELTA * ASPECT_RATIO;\nconst array = [\n  {\n    key: '1',\n    title: 'example title 1',\n    subtitle: 'example subtitle 1',\n  },\n  {\n    key: '2',\n    title: 'example title 2',\n    subtitle: 'example subtitle 2',\n  },\n  {\n    key: '3',\n    title: 'example title 3',\n    subtitle: 'example subtitle 3',\n  },\n];\n\nconst markers =() => {\n  return carparksavailable.map((element) => {\n    return(\n      <Marker coordinate = {{latitude: element.latitude,longitude: element.longitude} }/>\n    );\n  });\n};\n\n\nconst list = () => {\n  return carparksavailable.map((element) => {\n    _handleOpenWithWebBrowser = () => {\n      WebBrowser.openBrowserAsync(element.link);\n    };\n    return (\n      \n        \t<TouchableOpacity\tonPress={() => {\n            // should be able to change the map view not implemented\n          }}>\n           <SafeAreaView>\n          <Card style={{ marginBottom: 10,width: 350}}>\n\t\t\t\t\t<Card.Content>\n              {/* <View key={element.key} style={{margin: 10}}> */}\n                <Text style={[ {fontWeight: 'light',fontSize: 25}]}>\n                  {element.title}\n                  </Text>\n                <Text style={[ {fontWeight: 'bold',fontSize: 15}]}>Lots Available: {element.lotsavail}</Text>\n                <Pressable style={styles.button_box} onPress={this._handleOpenWithWebBrowser}>\n      <Text style={styles.text}>Open on Google Maps</Text>\n\n    </Pressable>\n  \n              \n          </Card.Content>\n\n\n</Card>\n</SafeAreaView>\n\n          </TouchableOpacity>\n    \n    );\n  });\n};\n\nconst CarparkMapsScreen= () =>{\n\n   \n  return (\n      <View style={styles.container}>\n        {/* <MapView\n                initialRegion={{\n                latitude: LATITUDE,\n                longitude: LONGITUDE,\n                latitudeDelta: LATITUDE_DELTA,\n                longitudeDelta: LONGITUDE_DELTA,\n                }}\n            > */}\n            <MapView\n            showsUserLocation={true}\n          provider={PROVIDER_DEFAULT}\n       \n          style={styles.map}\n          initialRegion={{\n            latitude: LATITUDE,\n            longitude: LONGITUDE,\n            latitudeDelta: LATITUDE_DELTA,\n            longitudeDelta: LONGITUDE_DELTA,\n          \n          }}\n                          \n                        \n                         \n        >\n          <MapView.UrlTile\n            urlTemplate=\"https://maps-a.onemap.sg/v3/Default/{z}/{x}/{y}.png\"\n            zIndex={-1}\n          />\n           \n       \n            \n          \n            {carparksavailable.map((element) => (\n          <MapView.Marker \n            coordinate={element.coordinate}\n            title={element.title} \n          />\n        ))}\n            \n         \n\n              </MapView>\n        <SafeAreaView style={{ flex: 1, justifyContent: \"bottom\", alignItems: \"center\" }}>\n          <Button title=\"Show all Carparks\" onPress={() => this.RBSheet.open() } />\n          <RBSheet\n            ref={ref => {\n              this.RBSheet = ref;\n            }}\n            height={300}\n            openDuration={300}\n            customStyles={{\n              container: {\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                flex:1\n              }\n            }}\n          >\n        \n            <ScrollView horizontal={false} >{list()}</ScrollView>\n          </RBSheet>\n      </SafeAreaView>\n            {/* <Text>Custom Tiles</Text> */}\n         \n       \n      </View>\n    );\n  \n}\n\n\n// MapsScreen.propTypes = {\n//   provider: MapView.ProviderPropType,\n// };\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n  map: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n  \n  latlng: {\n    width: 200,\n    alignItems: 'stretch',\n  },\n  button: {\n    // flexDirection: 'row',\n    width: 100,\n    paddingHorizontal: 12,\n    alignItems: 'center',\n    marginHorizontal: 10,\n  },\n  buttonContainer: {\n    // flexDirection: 'row',\n    marginVertical: 20,\n    backgroundColor: 'transparent',\n  },\n  button_box: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 8,\n    paddingHorizontal: 5,\n    borderRadius: 4,\n    elevation: 3,\n    backgroundColor: '#FFB899',\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white',\n  },\n});\n\nmodule.exports = CarparkMapsScreen;"]},"metadata":{},"sourceType":"module"}