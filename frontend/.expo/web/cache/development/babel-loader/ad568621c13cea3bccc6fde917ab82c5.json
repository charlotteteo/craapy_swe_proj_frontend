{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/charlotteteo/Downloads/cz2006final/craapy_swe_proj_frontend/frontend/screens/maps/CarparkMapsScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { Component, useRef, useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Avatar, Card, Title, Paragraph, IconButton } from \"react-native-paper\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport * as WebBrowser from 'expo-web-browser';\nimport { carparksavailable } from \"../../assets/carparksavailability\";\nimport MapView, { MAP_TYPES, PROVIDER_DEFAULT, PROVIDER_GOOGLE } from 'react-native-maps';\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport RBSheet from \"react-native-raw-bottom-sheet\";\nimport { Marker } from 'react-native-maps';\nimport { Modalize } from 'react-native-modalize';\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar ASPECT_RATIO = width / height;\nvar LATITUDE = 1.3109708;\nvar LONGITUDE = 103.7861198;\nvar LATITUDE_DELTA = 0.0922;\nvar LONGITUDE_DELTA = LATITUDE_DELTA * ASPECT_RATIO;\n\nfunction CarparkMapsScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var modalizeRef = useRef(null);\n\n  var onOpen = function onOpen() {\n    var _modalizeRef$current;\n\n    (_modalizeRef$current = modalizeRef.current) == null ? void 0 : _modalizeRef$current.open();\n  };\n\n  var getMovies = function getMovies() {\n    var response, json;\n    return _regeneratorRuntime.async(function getMovies$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch('http://localhost:8080/carparkcodes'));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            json = _context.sent;\n            setData(json);\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 13:\n            _context.prev = 13;\n            setLoading(false);\n            return _context.finish(13);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10, 13, 16]], Promise);\n  };\n\n  useEffect(function () {\n    getMovies();\n  }, []);\n\n  var markers = function markers() {\n    return data.map(function (element) {\n      return React.createElement(Marker, {\n        coordinate: {\n          latitude: element.latitude,\n          longitude: element.longitude\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }\n      });\n    });\n  };\n\n  var list = function list() {\n    return data.map(function (element) {\n      var address = 'https://www.google.com/maps?saddr=My+Location&daddr=' + element.latitude + ',' + element.longitude;\n\n      _handleOpenWithWebBrowser = function _handleOpenWithWebBrowser() {\n        WebBrowser.openBrowserAsync(address);\n      };\n\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {},\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }\n      }, React.createElement(Card, {\n        style: {\n          marginBottom: 10\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }\n      }, React.createElement(Card.Content, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: [{\n          fontWeight: 'bold',\n          fontSize: 20,\n          textAlign: 'center'\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 19\n        }\n      }, element.address), React.createElement(Text, {\n        style: [{\n          fontWeight: 'bold',\n          fontSize: 15,\n          textAlign: 'center'\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 19\n        }\n      }, element.car_park_type), React.createElement(Text, {\n        style: [{\n          fontWeight: 'bold',\n          fontSize: 15,\n          textAlign: 'center'\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 19\n        }\n      }, \"Free Parking: \", element.free_parking)), React.createElement(View, {\n        style: {\n          alignItems: \"center\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }\n      }, React.createElement(Pressable, {\n        style: styles.button_box,\n        onPress: _this._handleOpenWithWebBrowser,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          alignItems: \"center\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }\n      }, \"Open on Google Maps\"))))));\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }\n  }, React.createElement(ImageBackground, {\n    style: styles.background,\n    source: require(\"../../assets/Background.png\"),\n    resizeMode: \"cover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.headerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }, \"Carpark Map\")), React.createElement(MapView, {\n    showsUserLocation: true,\n    provider: PROVIDER_DEFAULT,\n    style: styles.map,\n    initialRegion: {\n      latitude: LATITUDE,\n      longitude: LONGITUDE,\n      latitudeDelta: LATITUDE_DELTA,\n      longitudeDelta: LONGITUDE_DELTA\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, React.createElement(MapView.UrlTile, {\n    urlTemplate: \"https://maps-a.onemap.sg/v3/Default/{z}/{x}/{y}.png\",\n    zIndex: -1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }), data.map(function (element) {\n    return React.createElement(MapView.Marker, {\n      coordinate: {\n        latitude: element.latitude,\n        longitude: element.longitude\n      },\n      title: element.title,\n      onPress: function onPress() {\n        return Alert.alert(element.Name, \"Route in Google Maps\", [{\n          text: \"No\",\n          onPress: function onPress() {\n            return console.log(\"Cancel Pressed\");\n          },\n          style: \"cancel\"\n        }, {\n          text: \"Yes\",\n          onPress: function onPress() {\n            return WebBrowser.openBrowserAsync(element.Address);\n          }\n        }]);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }\n    });\n  })), React.createElement(SafeAreaView, {\n    style: styles.test,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }\n  }, React.createElement(React.Fragment, null, React.createElement(TouchableOpacity, {\n    style: styles.buttoncarpark,\n    onPress: onOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.Buttontext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }\n  }, \"Show all Carparks\")), React.createElement(Modalize, {\n    ref: modalizeRef,\n    scrollViewProps: {\n      showsVerticalScrollIndicator: true\n    },\n    snapPoint: 400,\n    modalStyle: styles.modalcontainer,\n    HeaderComponent: React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: styles.ModalHeadertext,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }\n    }, \"All Carparks\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    horizontal: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }\n  }, list())))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  },\n  map: {\n    position: 'absolute',\n    top: 80,\n    left: 0,\n    right: 0,\n    bottom: 0\n  },\n  latlng: {\n    width: 200,\n    alignItems: 'stretch'\n  },\n  button: {\n    width: 100,\n    paddingHorizontal: 12,\n    alignItems: 'center',\n    marginHorizontal: 10\n  },\n  button_box: {\n    padding: 6,\n    height: 45,\n    width: 250,\n    elevation: 5,\n    justifyContent: 'center',\n    paddingVertical: 5,\n    paddingHorizontal: 8,\n    borderRadius: 2,\n    elevation: 3,\n    backgroundColor: '#ffbe30'\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white',\n    alignItems: \"center\"\n  },\n  background: {\n    width: \"110%\",\n    height: 80,\n    position: \"relative\",\n    marginBottom: 0\n  },\n  headerText: {\n    color: \"white\",\n    fontSize: 28,\n    fontWeight: \"bold\",\n    flexDirection: \"column\",\n    alignSelf: \"center\",\n    marginTop: 30\n  },\n  test: {\n    flex: 1,\n    justifyContent: \"flex-end\",\n    alignItems: \"center\"\n  },\n  buttoncarpark: {\n    borderColor: \"grey\",\n    borderWidth: 1,\n    backgroundColor: \"#F3F3F3\",\n    marginBottom: 10,\n    borderRadius: 20,\n    opacity: 0.7\n  },\n  Buttontext: {\n    fontWeight: \"bold\",\n    fontSize: 15,\n    padding: 15\n  },\n  modalcontainer: {\n    height: 100,\n    width: 400,\n    marginRight: 0,\n    alignSelf: \"center\",\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 3\n    },\n    shadowOpacity: 0.27,\n    shadowRadius: 4.65,\n    elevation: 6\n  },\n  ModalHeadertext: {\n    fontWeight: \"bold\",\n    fontSize: 25,\n    alignSelf: \"center\",\n    marginBottom: 5,\n    padding: 5\n  }\n});\nvar Stack = createStackNavigator();\nexport default function homestack() {\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    headerMode: \"float\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"CarparkInfoScreen\",\n    component: ResultsScreen,\n    options: {\n      headerBackTitleVisible: false,\n      headerTitle: false,\n      headerTransparent: true,\n      headerTintColor: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 9\n    }\n  })));\n}\nmodule.exports = CarparkMapsScreen;","map":{"version":3,"sources":["/Users/charlotteteo/Downloads/cz2006final/craapy_swe_proj_frontend/frontend/screens/maps/CarparkMapsScreen.js"],"names":["React","Component","useRef","useEffect","useState","Avatar","Card","Title","Paragraph","IconButton","createStackNavigator","NavigationContainer","WebBrowser","carparksavailable","MapView","MAP_TYPES","PROVIDER_DEFAULT","PROVIDER_GOOGLE","MaterialIcons","RBSheet","Marker","Modalize","Dimensions","get","width","height","ASPECT_RATIO","LATITUDE","LONGITUDE","LATITUDE_DELTA","LONGITUDE_DELTA","CarparkMapsScreen","navigation","isLoading","setLoading","data","setData","modalizeRef","onOpen","current","open","getMovies","fetch","response","json","console","error","markers","map","element","latitude","longitude","list","address","_handleOpenWithWebBrowser","openBrowserAsync","marginBottom","fontWeight","fontSize","textAlign","car_park_type","free_parking","alignItems","styles","button_box","text","container","background","require","headerText","latitudeDelta","longitudeDelta","title","Alert","alert","Name","onPress","log","style","Address","test","buttoncarpark","Buttontext","showsVerticalScrollIndicator","modalcontainer","ModalHeadertext","StyleSheet","create","position","top","left","right","bottom","justifyContent","latlng","button","paddingHorizontal","marginHorizontal","padding","elevation","paddingVertical","borderRadius","backgroundColor","lineHeight","letterSpacing","color","flexDirection","alignSelf","marginTop","flex","borderColor","borderWidth","opacity","marginRight","shadowColor","shadowOffset","shadowOpacity","shadowRadius","Stack","homestack","ResultsScreen","headerBackTitleVisible","headerTitle","headerTransparent","headerTintColor","module","exports"],"mappings":"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","sourcesContent":["import React,{Component, useRef,useEffect, useState } from 'react';\nimport {\n  StyleSheet,\n  View,\n  Text,\n  Dimensions,\n Button,\n SafeAreaView,\n ScrollView,\n TouchableOpacity,\n Pressable,\n ImageBackground,\n Alert\n} from 'react-native';\n\nimport {\n\tAvatar,\n\t\n\tCard,\n\tTitle,\n\tParagraph,\n\tIconButton,\n} from \"react-native-paper\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport * as WebBrowser from 'expo-web-browser';\nimport { carparksavailable } from '../../assets/carparksavailability';\nimport MapView,  { MAP_TYPES, PROVIDER_DEFAULT,PROVIDER_GOOGLE } from 'react-native-maps';\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport RBSheet from \"react-native-raw-bottom-sheet\";\nimport { Marker } from 'react-native-maps';\nimport { Modalize } from 'react-native-modalize';\n\nconst { width, height } = Dimensions.get('window');\n\nconst ASPECT_RATIO = width / height;\nconst LATITUDE =  1.3109708;\nconst LONGITUDE = 103.7861198;\nconst LATITUDE_DELTA = 0.0922;\n\nconst LONGITUDE_DELTA = LATITUDE_DELTA * ASPECT_RATIO;\n\n\nfunction CarparkMapsScreen ({navigation}){\n  const [isLoading, setLoading] = useState(true);\n  const [data, setData] = useState([]);\n  const modalizeRef = useRef(null);\n  const onOpen = () => {\n    modalizeRef.current?.open();}\n  const getMovies = async () => {\n     try {\n      const response = await fetch('http://localhost:8080/carparkcodes');\n      const json = await response.json();\n\n      setData(json);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    getMovies();\n  }, []);\n\n\n\nconst markers =() => {\n  return data.map((element) => {\n    return(\n      <Marker coordinate = {{latitude: element.latitude,longitude: element.longitude} }/>\n    );\n  });\n};\n\n\n\n\n\n\n  const list = () => {\n   \n    return data.map((element) => {\n    \n      const address= 'https://www.google.com/maps?saddr=My+Location&daddr='+element.latitude+','+element.longitude\n      _handleOpenWithWebBrowser = () => {\n        WebBrowser.openBrowserAsync(address);\n      };\n\n      return (\n        \n              <TouchableOpacity\tonPress={() => {\n                // navigation.navigate(\"NearbyCarpark\",{path:element.car_park_no,})\n                \n            }}>\n\n           \n            <Card style={{ marginBottom: 10 }}>\n                      <Card.Content>\n                {/* <View key={element.key} style={{margin: 10}}> */}\n                  {/* <Text style={[ {fontWeight: 'bold',fontSize: 20}]}>\n                    {element.name}\n                    </Text> */}\n                  <Text style={[ {fontWeight: 'bold',fontSize: 20,textAlign: 'center',}]}>{element.address}</Text>\n\n                  <Text style={[ {fontWeight: 'bold',fontSize: 15,textAlign: 'center',}]}>{element.car_park_type}</Text>\n\n                  <Text style={[ {fontWeight: 'bold',fontSize: 15,textAlign: 'center',}]}>Free Parking: {element.free_parking}</Text>\n\n            </Card.Content>\n            <View style={{alignItems:\"center\"}}>\n            <Pressable style={styles.button_box} onPress={this._handleOpenWithWebBrowser}>\n            <View style={{alignItems:\"center\"}}>\n        <Text style={styles.text}>Open on Google Maps</Text>\n        </View>\n      </Pressable>\n      </View>\n  \n  </Card>\n            </TouchableOpacity>\n        \n      );\n    });\n  };\n\n\n  return (\n    <View style={styles.container}>\n                    <ImageBackground style={styles.background} source={require('../../assets/Background.png')} resizeMode=\"cover\">      \n              <Text style={styles.headerText}>Carpark Map</Text>\n          </ImageBackground>     \n      {/* <MapView\n              initialRegion={{\n              latitude: LATITUDE,\n              longitude: LONGITUDE,\n              latitudeDelta: LATITUDE_DELTA,\n              longitudeDelta: LONGITUDE_DELTA,\n              }}\n          > */}\n          <MapView\n          showsUserLocation={true}\n        provider={PROVIDER_DEFAULT}\n     \n        style={styles.map}\n        initialRegion={{\n          latitude: LATITUDE,\n          longitude: LONGITUDE,\n          latitudeDelta: LATITUDE_DELTA,\n          longitudeDelta: LONGITUDE_DELTA,\n        \n        }}\n                        \n                      \n                       \n      >\n        <MapView.UrlTile\n          urlTemplate=\"https://maps-a.onemap.sg/v3/Default/{z}/{x}/{y}.png\"\n          zIndex={-1}\n        />\n         \n     \n          \n        \n          {data.map((element) => (\n        <MapView.Marker \n        // FORMAT coordinate: {\n        //   latitude: 1.342339,\n        //   longitude: 103.7742345,\n        //   }\n          coordinate = {{latitude: element.latitude,longitude: element.longitude} }\n          title={element.title} \n          onPress={() => Alert.alert(\n            element.Name,\n            \"Route in Google Maps\",\n            [\n              \n              {\n                text: \"No\",\n                onPress: () => console.log(\"Cancel Pressed\"),\n                style: \"cancel\"\n              },\n              {\n                text: \"Yes\",\n                onPress: () => WebBrowser.openBrowserAsync(element.Address)\n              }\n            ]\n            )\n              \n              \n              \n              }\n              />\n            ))}\n                 \n       \n\n            </MapView>\n      <SafeAreaView style={styles.test}>\n      <>\n    <TouchableOpacity style={styles.buttoncarpark} onPress={onOpen}>\n      <Text style={styles.Buttontext}>Show all Carparks</Text>\n    </TouchableOpacity>\n\n    <Modalize ref={modalizeRef}\n        scrollViewProps={{ showsVerticalScrollIndicator: true }}\n        snapPoint={400}\n        modalStyle={styles.modalcontainer}\n        HeaderComponent={\n          <View>\n            <Text style={styles.ModalHeadertext}>All Carparks</Text>\n          </View>\n        }\n        //withHandle={false}\n        //adjustToContentHeight={true}\n        >\n        <ScrollView horizontal={false} >{list()}</ScrollView>\n      </Modalize>\n  </>\n\n    </SafeAreaView>\n          {/* <Text>Custom Tiles</Text> */}\n     \n    </View>\n  );\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// MapsScreen.propTypes = {\n//   provider: MapView.ProviderPropType,\n// };\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n  map: {\n    position: 'absolute',\n    top:80,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n  \n  latlng: {\n    width: 200,\n    alignItems: 'stretch',\n  },\n  button: {\n    // flexDirection: 'row',\n    width: 100,\n    paddingHorizontal: 12,\n    alignItems: 'center',\n    marginHorizontal: 10,\n  },\n  button_box: {\n\n    padding: 6,\n    height: 45,\n    width: 250,\n    // justifyContent: 'center',\n    // alignItems: 'center',\n    elevation: 5,\n    justifyContent: 'center',\n    paddingVertical: 5,\n    paddingHorizontal: 8,\n    borderRadius: 2,\n    elevation: 3,\n    backgroundColor: '#ffbe30',\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white',\n    alignItems:\"center\"\n  },\n  background:{\n    width:\"110%\",\n    height:80,\n    //top:50,\n    //alignSelf: \"flex-start\",\n    //justifyContent: \"flex-start\",\n    position: \"relative\",\n    //borderColor: \"black\",\n    //borderWidth: 5,\n    marginBottom: 0\n},\nheaderText:{\n    color:\"white\",\n    fontSize: 28,\n    fontWeight:\"bold\",\n    flexDirection: \"column\",\n    alignSelf:\"center\",\n    marginTop: 30\n},\ntest:{\n  flex: 1, \n  justifyContent: \"flex-end\",\n  alignItems: \"center\",\n //borderColor:\"blue\",\n //borderWidth:10\n},\nbuttoncarpark:{\n  borderColor:\"grey\",\n  borderWidth:1,\n  backgroundColor: \"#F3F3F3\",\n  marginBottom: 10,\n  borderRadius:20,\n  opacity: 0.7\n\n},\nButtontext:{\n  fontWeight:\"bold\",\n  fontSize: 15,\n  padding:15\n},\nmodalcontainer:{\n  //borderWidth:5,\n  //borderColor: \"blue\",\n  height:100,\n  width:400,\n  marginRight:0,\n  alignSelf:\"center\",\n  alignItems:\"center\",\n  shadowColor: \"#000\",\nshadowOffset: {\n\twidth: 0,\n\theight: 3,\n},\nshadowOpacity: 0.27,\nshadowRadius: 4.65,\n\nelevation: 6,\n\n},\nModalHeadertext:{\n  fontWeight:\"bold\",\n  fontSize: 25,\n  alignSelf:\"center\",\n  marginBottom:5,\n  padding:5\n}\n});\n\n\n\nconst Stack = createStackNavigator();\n\nexport default function homestack() {\n\treturn (\n    <NavigationContainer>\n\t\t  <Stack.Navigator headerMode=\"float\">\n    \n\n       \n\n        <Stack.Screen name=\"CarparkInfoScreen\" component={ResultsScreen}       \n                options={{\n                          headerBackTitleVisible:false,\n                          headerTitle:false,\n                          headerTransparent:true,\n                          headerTintColor:'#fff'\n                      }}/>  \n\t\t  </Stack.Navigator>\n    </NavigationContainer>\n\t);\n}\n\nmodule.exports = CarparkMapsScreen;"]},"metadata":{},"sourceType":"module"}