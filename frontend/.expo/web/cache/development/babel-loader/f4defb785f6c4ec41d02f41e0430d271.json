{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/charlotteteo/Downloads/cz2006final/craapy_swe_proj_frontend/frontend/screens/maps/NearbyCarparkMapsScreenCopy.js\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React, { Component, useRef, useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Avatar, Card, Title, Paragraph, IconButton } from \"react-native-paper\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport * as WebBrowser from 'expo-web-browser';\nimport { carparksavailable } from \"../../assets/carparksavailability\";\nimport MapView, { MAP_TYPES, PROVIDER_DEFAULT, PROVIDER_GOOGLE } from 'react-native-maps';\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport RBSheet from \"react-native-raw-bottom-sheet\";\nimport { Marker } from 'react-native-maps';\nimport { Modalize } from 'react-native-modalize';\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar ASPECT_RATIO = width / height;\nvar LATITUDE = 1.339645028;\nvar LONGITUDE = 103.7758026;\nvar LATITUDE_DELTA = 0.0922;\nvar LONGITUDE_DELTA = LATITUDE_DELTA * ASPECT_RATIO;\n\nfunction NearbyCarparkMapsScreenCopy(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var modalizeRef = useRef(null);\n\n  var onOpen = function onOpen() {\n    var _modalizeRef$current;\n\n    (_modalizeRef$current = modalizeRef.current) == null ? void 0 : _modalizeRef$current.open();\n  };\n\n  var getMovies = function getMovies() {\n    return fetch('http://localhost:8080/getcarparkinfo/1.284682989/103.832428').then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return json;\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  console.log(getMovies());\n  useEffect(function () {\n    getMovies();\n  }, []);\n\n  var list = function list() {\n    return Object.keys(data).map(function (key) {\n      var obj = data[key];\n      obj.keyName = key;\n\n      for (var _iterator = _createForOfIteratorHelperLoose(carparksavailable), _step; !(_step = _iterator()).done;) {\n        var item = _step.value;\n\n        if (item.car_park_no === key) {\n          obj.name = item.address;\n          obj.free_parking = item.free_parking;\n          break;\n        }\n      }\n\n      obj.address = 'https://www.google.com/maps?saddr=My+Location&daddr=' + obj.latitude + ',' + obj.longitude;\n\n      _handleOpenWithWebBrowser = function _handleOpenWithWebBrowser() {\n        WebBrowser.openBrowserAsync(obj.address);\n      };\n\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {},\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }\n      }, React.createElement(Card, {\n        style: {\n          marginBottom: 10\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }\n      }, React.createElement(Card.Content, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: [{\n          fontWeight: 'bold',\n          fontSize: 20\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }\n      }, obj.name), React.createElement(Text, {\n        style: [{\n          fontWeight: 'bold',\n          fontSize: 15\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }\n      }, \"keyName:\", obj.keyName), React.createElement(Text, {\n        style: [{\n          fontWeight: 'bold',\n          fontSize: 15\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }\n      }, \"lots avail:\", obj.lotsAvailable), React.createElement(Text, {\n        style: [{\n          fontWeight: 'bold',\n          fontSize: 15\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }\n      }, \"total lots:\", obj.totalLots), React.createElement(Text, {\n        style: [{\n          fontWeight: 'bold',\n          fontSize: 15\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }\n      }, \"free parking:\", obj.free_parking)), React.createElement(Pressable, {\n        style: styles.button_box,\n        onPress: _this._handleOpenWithWebBrowser,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 5\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 9\n        }\n      }, \"Open on Google Maps\"))));\n    });\n  };\n\n  var maps = function maps() {\n    return Object.keys(data).map(function (key) {\n      var obj = data[key];\n      obj.keyName = key;\n\n      for (var _iterator2 = _createForOfIteratorHelperLoose(carparksavailable), _step2; !(_step2 = _iterator2()).done;) {\n        var item = _step2.value;\n\n        if (item.car_park_no === key) {\n          obj.name = item.address;\n          obj.latitude = item.Coordinates.latitude;\n          obj.longitude = item.Coordinates.longitude;\n          break;\n        }\n      }\n\n      obj.address = 'https://www.google.com/maps?saddr=My+Location&daddr=' + obj.latitude + ',' + obj.longitude;\n\n      _handleOpenWithWebBrowser = function _handleOpenWithWebBrowser() {\n        WebBrowser.openBrowserAsync(address);\n      };\n\n      return React.createElement(MapView.Marker, {\n        coordinate: {\n          latitude: obj.latitude,\n          longitude: obj.longitude\n        },\n        onPress: function onPress() {\n          return Alert.alert(element.Name, \"Route in Google Maps\", [{\n            text: \"No\",\n            onPress: function onPress() {\n              return console.log(\"Cancel Pressed\");\n            },\n            style: \"cancel\"\n          }, {\n            text: \"Yes\",\n            onPress: function onPress() {\n              return WebBrowser.openBrowserAsync(obj.address);\n            }\n          }]);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }\n      });\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 5\n    }\n  }, React.createElement(ImageBackground, {\n    style: styles.background,\n    source: require(\"../../assets/Background.png\"),\n    resizeMode: \"cover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.headerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 15\n    }\n  }, \"Nearby Carparks Map\")), React.createElement(MapView, {\n    showsUserLocation: true,\n    provider: PROVIDER_DEFAULT,\n    style: styles.map,\n    initialRegion: {\n      latitude: LATITUDE,\n      longitude: LONGITUDE,\n      latitudeDelta: LATITUDE_DELTA,\n      longitudeDelta: LONGITUDE_DELTA\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 11\n    }\n  }, React.createElement(MapView.UrlTile, {\n    urlTemplate: \"https://maps-a.onemap.sg/v3/Default/{z}/{x}/{y}.png\",\n    zIndex: -1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }\n  }), maps()), React.createElement(SafeAreaView, {\n    style: styles.test,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }\n  }, React.createElement(React.Fragment, null, React.createElement(TouchableOpacity, {\n    style: styles.buttoncarpark,\n    onPress: onOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.Buttontext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }\n  }, \"Show all Carparks\")), React.createElement(Modalize, {\n    ref: modalizeRef,\n    scrollViewProps: {\n      showsVerticalScrollIndicator: false\n    },\n    snapPoint: 400,\n    modalStyle: styles.modalcontainer,\n    HeaderComponent: React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: styles.ModalHeadertext,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 13\n      }\n    }, \"Nearby Carparks\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    horizontal: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }\n  }, list())))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  },\n  map: {\n    position: 'absolute',\n    top: 80,\n    left: 0,\n    right: 0,\n    bottom: 0\n  },\n  latlng: {\n    width: 200,\n    alignItems: 'stretch'\n  },\n  button: {\n    width: 100,\n    paddingHorizontal: 12,\n    alignItems: 'center',\n    marginHorizontal: 10\n  },\n  button_box: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 8,\n    paddingHorizontal: 5,\n    borderRadius: 4,\n    elevation: 3,\n    backgroundColor: '#FFB899'\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white'\n  },\n  background: {\n    width: \"110%\",\n    height: 80,\n    position: \"relative\",\n    marginBottom: 0\n  },\n  headerText: {\n    color: \"white\",\n    fontSize: 25,\n    fontWeight: \"bold\",\n    flexDirection: \"column\",\n    alignSelf: \"center\",\n    marginTop: 30\n  },\n  test: {\n    flex: 1,\n    justifyContent: \"flex-end\",\n    alignItems: \"center\"\n  },\n  buttoncarpark: {\n    borderColor: \"grey\",\n    borderWidth: 1,\n    backgroundColor: \"#F3F3F3\",\n    marginBottom: 10,\n    borderRadius: 20,\n    opacity: 0.7\n  },\n  Buttontext: {\n    fontWeight: \"bold\",\n    fontSize: 15,\n    padding: 15\n  },\n  modalcontainer: {\n    height: 100,\n    width: 400,\n    marginRight: 0,\n    alignSelf: \"center\",\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 3\n    },\n    shadowOpacity: 0.27,\n    shadowRadius: 4.65,\n    elevation: 6\n  },\n  ModalHeadertext: {\n    fontWeight: \"bold\",\n    fontSize: 25,\n    alignSelf: \"center\",\n    marginBottom: 5,\n    padding: 5\n  }\n});\nvar Stack = createStackNavigator();\nexport default function homestack() {\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    headerMode: \"float\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"CarparkInfoScreen\",\n    component: ResultsScreen,\n    options: {\n      headerBackTitleVisible: false,\n      headerTitle: false,\n      headerTransparent: true,\n      headerTintColor: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 9\n    }\n  })));\n}\nmodule.exports = NearbyCarparkMapsScreenCopy;","map":{"version":3,"sources":["/Users/charlotteteo/Downloads/cz2006final/craapy_swe_proj_frontend/frontend/screens/maps/NearbyCarparkMapsScreenCopy.js"],"names":["React","Component","useRef","useEffect","useState","Avatar","Card","Title","Paragraph","IconButton","createStackNavigator","NavigationContainer","WebBrowser","carparksavailable","MapView","MAP_TYPES","PROVIDER_DEFAULT","PROVIDER_GOOGLE","MaterialIcons","RBSheet","Marker","Modalize","Dimensions","get","width","height","ASPECT_RATIO","LATITUDE","LONGITUDE","LATITUDE_DELTA","LONGITUDE_DELTA","NearbyCarparkMapsScreenCopy","navigation","isLoading","setLoading","data","setData","modalizeRef","onOpen","current","open","getMovies","fetch","then","response","json","catch","error","console","log","list","Object","keys","map","key","obj","keyName","item","car_park_no","name","address","free_parking","latitude","longitude","_handleOpenWithWebBrowser","openBrowserAsync","marginBottom","fontWeight","fontSize","lotsAvailable","totalLots","styles","button_box","text","maps","Coordinates","Alert","alert","element","Name","onPress","style","container","background","require","headerText","latitudeDelta","longitudeDelta","test","buttoncarpark","Buttontext","showsVerticalScrollIndicator","modalcontainer","ModalHeadertext","StyleSheet","create","position","top","left","right","bottom","justifyContent","alignItems","latlng","button","paddingHorizontal","marginHorizontal","paddingVertical","borderRadius","elevation","backgroundColor","lineHeight","letterSpacing","color","flexDirection","alignSelf","marginTop","flex","borderColor","borderWidth","opacity","padding","marginRight","shadowColor","shadowOffset","shadowOpacity","shadowRadius","Stack","homestack","ResultsScreen","headerBackTitleVisible","headerTitle","headerTransparent","headerTintColor","module","exports"],"mappings":"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","sourcesContent":["import React,{Component, useRef,useEffect, useState } from 'react';\nimport {\n  StyleSheet,\n  View,\n  Text,\n  Dimensions,\n Button,\n SafeAreaView,\n ScrollView,\n TouchableOpacity,\n Pressable,\n ImageBackground,\n Alert\n} from 'react-native';\n\nimport {\n\tAvatar,\n\t\n\tCard,\n\tTitle,\n\tParagraph,\n\tIconButton,\n} from \"react-native-paper\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport * as WebBrowser from 'expo-web-browser';\nimport { carparksavailable } from '../../assets/carparksavailability';\nimport MapView,  { MAP_TYPES, PROVIDER_DEFAULT,PROVIDER_GOOGLE } from 'react-native-maps';\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport RBSheet from \"react-native-raw-bottom-sheet\";\nimport { Marker } from 'react-native-maps';\nimport { Modalize } from 'react-native-modalize';\n\nconst { width, height } = Dimensions.get('window');\n\nconst ASPECT_RATIO = width / height;\nconst LATITUDE =  1.339645028;\nconst LONGITUDE = 103.7758026;\nconst LATITUDE_DELTA = 0.0922;\n\nconst LONGITUDE_DELTA = LATITUDE_DELTA * ASPECT_RATIO;\n\n\n\n function NearbyCarparkMapsScreenCopy ({navigation}){\n  const [isLoading, setLoading] = useState(true);\n  const [data, setData] = useState([]);\n  const modalizeRef = useRef(null);\n\n  const onOpen = () => {\n    modalizeRef.current?.open();}\n  const getMovies=()=>{\n    return fetch('http://localhost:8080/getcarparkinfo/1.284682989/103.832428')\n    .then((response) => response.json())\n    .then((json) => {\n      return json;\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n  }\n  console.log(getMovies())\n// const getMovies=async()=>{\n//   try {\n\n//       const response=await fetch('http://localhost:8080/getcarparkinfo/1.284682989/103.832428')\n     \n       \n\n      // //  const response=await fetch('http://localhost:8080/getcarparkinfo/ 1.313349962/103.7645874')\n      // // const response = await fetch('http://localhost:8080/getcarparkinfo/'+latitude+ \"/\"+longitude);\n      // const json = await response.json();\n      // console.log(json)\n      // setData(json)\n      // console.log(data)\n      // return Object.keys(data).map(key => {\n       \n      //   let obj = data[key];\n      //   obj.keyName = key; \n      //   console.log(obj)\n      \n      \n      // })\n\n  //   } catch (error) {\n  //     console.error(error);\n  //   } finally {\n  //     setLoading(false);\n      \n  //   }\n  // }\n  \n    useEffect(() => {\n      getMovies();\n    }, []);\n  \n  \n    const  list= () =>{\n  \n      return Object.keys(data).map(key => {\n       \n        let obj = data[key];\n        obj.keyName = key; \n        for (const item of carparksavailable) {\n          if (item.car_park_no === key) {\n            obj.name=item.address\n            obj.free_parking=item.free_parking\n            \n            break\n          }\n        }\n        obj.address= 'https://www.google.com/maps?saddr=My+Location&daddr='+obj.latitude+','+obj.longitude\n        _handleOpenWithWebBrowser = () => {\n          WebBrowser.openBrowserAsync(obj.address);\n        };\n        \n  \n        // console.log(response1)\n        return (\n          \n                <TouchableOpacity\tonPress={() => {\n                  // navigation.navigate(\"Info\")\n              \n              }}>\n  \n                \n  \n             \n              <Card style={{ marginBottom: 10 }}>\n                        <Card.Content>\n                  \n                    <Text style={[ {fontWeight: 'bold',fontSize: 20}]}>\n                      {obj.name}\n                      </Text>\n                    <Text style={[ {fontWeight: 'bold',fontSize: 15}]}>keyName:{obj.keyName}</Text>\n  \n                    <Text style={[ {fontWeight: 'bold',fontSize: 15}]}>lots avail:{obj.lotsAvailable}</Text>\n  \n                    <Text style={[ {fontWeight: 'bold',fontSize: 15}]}>total lots:{obj.totalLots}</Text>\n                   \n                    <Text style={[ {fontWeight: 'bold',fontSize: 15}]}>free parking:{obj.free_parking}</Text>\n                   \n                  \n                   \n              </Card.Content>\n    \n    \n    \n\n    <Pressable style={styles.button_box} onPress={this._handleOpenWithWebBrowser}>\n        <Text style={styles.text}>Open on Google Maps</Text>\n  \n      </Pressable>\n      </Card>\n    \n\n\n              </TouchableOpacity>\n          \n        );\n      });\n    };\n    const  maps= () =>{\n      \n      return Object.keys(data).map(key => {\n        let obj = data[key];\n        obj.keyName = key;\n\n       \n        \n        for (const item of carparksavailable) {\n          if (item.car_park_no === key) {\n            obj.name=item.address\n            obj.latitude=item.Coordinates.latitude\n            obj.longitude=item.Coordinates.longitude\n            break\n          }\n        }\n        obj.address= 'https://www.google.com/maps?saddr=My+Location&daddr='+obj.latitude+','+obj.longitude\n        _handleOpenWithWebBrowser = () => {\n          WebBrowser.openBrowserAsync(address);\n        };\n  \n        // console.log(response1)\n        return (\n          \n          <MapView.Marker \n           coordinate = {{latitude: obj.latitude,longitude: obj.longitude} }\n           \n           \n          onPress={() => Alert.alert(\n            element.Name,\n            \"Route in Google Maps\",\n            [\n              \n              {\n                text: \"No\",\n                onPress: () => console.log(\"Cancel Pressed\"),\n                style: \"cancel\"\n              },\n              {\n                text: \"Yes\",\n                onPress: () => WebBrowser.openBrowserAsync(obj.address)\n              }\n            ]\n            )\n              \n              \n              \n              }/>\n          \n        );\n      });\n    };\n\n\n\n\n\n\n  return (\n    <View style={styles.container}>\n                    <ImageBackground style={styles.background} source={require('../../assets/Background.png')} resizeMode=\"cover\">      \n              <Text style={styles.headerText}>Nearby Carparks Map</Text>\n          </ImageBackground>     \n      {/* <MapView\n              initialRegion={{\n              latitude: LATITUDE,\n              longitude: LONGITUDE,\n              latitudeDelta: LATITUDE_DELTA,\n              longitudeDelta: LONGITUDE_DELTA,\n              }}\n          > */}\n          <MapView\n          showsUserLocation={true}\n        provider={PROVIDER_DEFAULT}\n     \n        style={styles.map}\n        initialRegion={{\n          latitude: LATITUDE,\n          longitude: LONGITUDE,\n          latitudeDelta: LATITUDE_DELTA,\n          longitudeDelta: LONGITUDE_DELTA,\n        \n        }}\n                        \n                      \n                       \n      >\n        <MapView.UrlTile\n          urlTemplate=\"https://maps-a.onemap.sg/v3/Default/{z}/{x}/{y}.png\"\n          zIndex={-1}\n        />\n         \n     \n          \n       {maps()}\n       \n\n            </MapView>\n      <SafeAreaView style={styles.test}>\n      <>\n    <TouchableOpacity style={styles.buttoncarpark} onPress={onOpen}>\n      <Text style={styles.Buttontext}>Show all Carparks</Text>\n\n    </TouchableOpacity>\n\n    <Modalize ref={modalizeRef}\n        scrollViewProps={{ showsVerticalScrollIndicator: false }}\n        snapPoint={400}\n        modalStyle={styles.modalcontainer}\n        HeaderComponent={\n          <View>\n            <Text style={styles.ModalHeadertext}>Nearby Carparks</Text>\n          </View>\n        }\n        //withHandle={false}\n        //adjustToContentHeight={true}\n        >\n        <ScrollView horizontal={false} >{list()}</ScrollView>\n      </Modalize>\n  </>\n\n    </SafeAreaView>\n          {/* <Text>Custom Tiles</Text> */}\n     \n    </View>\n  );\n  \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// MapsScreen.propTypes = {\n//   provider: MapView.ProviderPropType,\n// };\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n  map: {\n    position: 'absolute',\n    top:80,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n  \n  latlng: {\n    width: 200,\n    alignItems: 'stretch',\n  },\n  button: {\n    // flexDirection: 'row',\n    width: 100,\n    paddingHorizontal: 12,\n    alignItems: 'center',\n    marginHorizontal: 10,\n  },\n  button_box: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 8,\n    paddingHorizontal: 5,\n    borderRadius: 4,\n    elevation: 3,\n    backgroundColor: '#FFB899',\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white',\n  },\n  background:{\n    width:\"110%\",\n    height:80,\n    //top:50,\n    //alignSelf: \"flex-start\",\n    //justifyContent: \"flex-start\",\n    position: \"relative\",\n    //borderColor: \"black\",\n    //borderWidth: 5,\n    marginBottom: 0\n},\nheaderText:{\n    color:\"white\",\n    fontSize: 25,\n    fontWeight:\"bold\",\n    flexDirection: \"column\",\n    alignSelf:\"center\",\n    marginTop: 30\n},\ntest:{\n  flex: 1, \n  justifyContent: \"flex-end\",\n  alignItems: \"center\",\n //borderColor:\"blue\",\n //borderWidth:10\n},\nbuttoncarpark:{\n  borderColor:\"grey\",\n  borderWidth:1,\n  backgroundColor: \"#F3F3F3\",\n  marginBottom: 10,\n  borderRadius:20,\n  opacity: 0.7\n\n},\nButtontext:{\n  fontWeight:\"bold\",\n  fontSize: 15,\n  padding:15\n},\nmodalcontainer:{\n  //borderWidth:5,\n  //borderColor: \"blue\",\n  height:100,\n  width:400,\n  marginRight:0,\n  alignSelf:\"center\",\n  alignItems:\"center\",\n  shadowColor: \"#000\",\nshadowOffset: {\n\twidth: 0,\n\theight: 3,\n},\nshadowOpacity: 0.27,\nshadowRadius: 4.65,\n\nelevation: 6,\n\n},\nModalHeadertext:{\n  fontWeight:\"bold\",\n  fontSize: 25,\n  alignSelf:\"center\",\n  marginBottom:5,\n  padding:5\n}\n});\n\n\n\nconst Stack = createStackNavigator();\n\nexport default function homestack() {\n\treturn (\n    <NavigationContainer>\n\t\t  <Stack.Navigator headerMode=\"float\">\n    \n  \n        \n\n        <Stack.Screen name=\"CarparkInfoScreen\" component={ResultsScreen}       \n                options={{\n                          headerBackTitleVisible:false,\n                          headerTitle:false,\n                          headerTransparent:true,\n                          headerTintColor:'#fff'\n                      }}/>  \n\t\t  </Stack.Navigator>\n    </NavigationContainer>\n\t);\n}\n\nmodule.exports = NearbyCarparkMapsScreenCopy;"]},"metadata":{},"sourceType":"module"}