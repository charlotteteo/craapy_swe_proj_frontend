{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/charlotteteo/Downloads/cz2006final/craapy_swe_proj_frontend/frontend/screens/CarparksResultsScreen.js\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport SearchScreen from \"./home/search/SearchScreen\";\nimport FilterScreen from \"./home/filter/FilterScreen\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport InfoScreen from \"./InfoScreen\";\nimport { carparksavailable } from \"../assets/carparksavailability\";\nimport { Avatar, Card, Title, Paragraph, IconButton } from \"react-native-paper\";\n\nfunction CarparkResultsScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var getMovies = function getMovies() {\n    var response, json;\n    return _regeneratorRuntime.async(function getMovies$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch('http://localhost:8080/getcarparkinfo/1.339645028/103.7758026'));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            json = _context.sent;\n            setData(json);\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 13:\n            _context.prev = 13;\n            setLoading(false);\n            return _context.finish(13);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10, 13, 16]], Promise);\n  };\n\n  useEffect(function () {\n    getMovies();\n  }, []);\n\n  var list = function list() {\n    return Object.keys(data).map(function (key) {\n      var obj = data[key];\n      obj.keyName = key;\n\n      for (var _iterator = _createForOfIteratorHelperLoose(carparksavailable), _step; !(_step = _iterator()).done;) {\n        var item = _step.value;\n\n        if (item.car_park_no === key) {\n          obj.name = item.address;\n          obj.free_parking = item.free_parking;\n        }\n      }\n\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {},\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }\n      }, React.createElement(Card, {\n        style: {\n          marginBottom: 10\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }, React.createElement(Card.Content, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: [{\n          fontWeight: 'bold',\n          fontSize: 20\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 19\n        }\n      }, obj.name), React.createElement(Text, {\n        style: [{\n          fontWeight: 'bold',\n          fontSize: 15\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 19\n        }\n      }, \"keyName:\", obj.keyName), React.createElement(Text, {\n        style: [{\n          fontWeight: 'bold',\n          fontSize: 15\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 19\n        }\n      }, \"lots avail:\", obj.lotsAvailable), React.createElement(Text, {\n        style: [{\n          fontWeight: 'bold',\n          fontSize: 15\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 19\n        }\n      }, \"total lots:\", obj.totalLots), React.createElement(Text, {\n        style: [{\n          fontWeight: 'bold',\n          fontSize: 15\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 19\n        }\n      }, \"free parking:\", obj.free_parking))));\n    });\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: {\n      flex: 1,\n      padding: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, list()));\n}\n\n;\nvar Stack = createStackNavigator();\nmodule.exports = CarparkResultsScreen;","map":{"version":3,"sources":["/Users/charlotteteo/Downloads/cz2006final/craapy_swe_proj_frontend/frontend/screens/CarparksResultsScreen.js"],"names":["React","useEffect","useState","createStackNavigator","SearchScreen","FilterScreen","NavigationContainer","InfoScreen","carparksavailable","Avatar","Card","Title","Paragraph","IconButton","CarparkResultsScreen","navigation","isLoading","setLoading","data","setData","getMovies","fetch","response","json","console","error","list","Object","keys","map","key","obj","keyName","item","car_park_no","name","address","free_parking","marginBottom","fontWeight","fontSize","lotsAvailable","totalLots","flex","padding","Stack","module","exports"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { SafeAreaView,ActivityIndicator, FlatList, Text, View , TouchableOpacity,ScrollView} from 'react-native';\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport SearchScreen from \"./home/search/SearchScreen\";\nimport FilterScreen from \"./home/filter/FilterScreen\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport InfoScreen from \"./InfoScreen\";\nimport { carparksavailable } from '../assets/carparksavailability';\nimport {\n\tAvatar,\n\t\n\tCard,\n\tTitle,\n\tParagraph,\n\tIconButton,\n} from \"react-native-paper\";\n\n\n\nfunction CarparkResultsScreen ({navigation}){\n  const [isLoading, setLoading] = useState(true);\n  const [data, setData] = useState([]);\n  const getMovies = async () => {\n     try {\n      const response = await fetch('http://localhost:8080/getcarparkinfo/1.339645028/103.7758026');\n      const json = await response.json();\n      setData(json);\n\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n      \n    }\n  }\n\n  useEffect(() => {\n    getMovies();\n  }, []);\n\n\n  const  list= () =>{\n\n    return Object.keys(data).map(key => {\n      let obj = data[key];\n      obj.keyName = key;\n      \n      for (const item of carparksavailable) {\n        if (item.car_park_no === key) {\n          obj.name=item.address\n          obj.free_parking=item.free_parking\n        }\n      }\n      \n\n      // console.log(response1)\n      return (\n        \n              <TouchableOpacity\tonPress={() => {\n                // navigation.navigate(\"Info\")\n            \n            }}>\n\n              \n\n           \n            <Card style={{ marginBottom: 10 }}>\n                      <Card.Content>\n                \n                  <Text style={[ {fontWeight: 'bold',fontSize: 20}]}>\n                    {obj.name}\n                    </Text>\n                  <Text style={[ {fontWeight: 'bold',fontSize: 15}]}>keyName:{obj.keyName}</Text>\n\n                  <Text style={[ {fontWeight: 'bold',fontSize: 15}]}>lots avail:{obj.lotsAvailable}</Text>\n\n                  <Text style={[ {fontWeight: 'bold',fontSize: 15}]}>total lots:{obj.totalLots}</Text>\n                 \n                  <Text style={[ {fontWeight: 'bold',fontSize: 15}]}>free parking:{obj.free_parking}</Text>\n                 \n                 \n            </Card.Content>\n  \n  \n  </Card>\n            </TouchableOpacity>\n        \n      );\n    });\n  };\n\n\n\n  return (\n    <SafeAreaView style={{ flex: 1, padding: 24 }}>\n      <ScrollView>\n     {list()}\n    </ScrollView> \n      \n    </SafeAreaView>\n  );\n};\n\n\nconst Stack = createStackNavigator();\n\n// export default function homestack() {\n// \treturn (\n// \t\t<Stack.Navigator headerMode=\"float\">\n// \t\t\t<Stack.Screen name=\"Info\" component={InfoScreen} />\n//       <Stack.Screen name=\"Filter\" component={FilterScreen} />\n//       <Stack.Screen name=\"ResultsScreen\" component={ResultsScreen} />\n// \t\t</Stack.Navigator>\n// \t);\n// }\n\nmodule.exports=CarparkResultsScreen;\n"]},"metadata":{},"sourceType":"module"}