{
  "ast": null,
  "code": "var _this = this,\n    _jsxFileName = \"/Users/charlotteteo/Downloads/cz2006final/craapy_swe_proj_frontend/frontend/screens/maps/HawkerMapsScreen.js\";\n\nimport React, { Component, useRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport ResultsScreen from \"../ResultsScreen\";\nimport HomeScreen from \"../home/HomeScreen\";\nimport InfoScreen from \"../InfoScreen\";\nimport { Avatar, Card, Title, Paragraph, IconButton } from \"react-native-paper\";\nimport * as WebBrowser from 'expo-web-browser';\nimport { hawkerclosure } from \"../../assets/HawkerClosure\";\nimport MapView, { MAP_TYPES, PROVIDER_DEFAULT, PROVIDER_GOOGLE } from 'react-native-maps';\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport RBSheet from \"react-native-raw-bottom-sheet\";\nimport { Marker } from 'react-native-maps';\nimport { Modalize } from 'react-native-modalize';\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar ASPECT_RATIO = width / height;\nvar LATITUDE = 1.3109708;\nvar LONGITUDE = 103.7861198;\nvar LATITUDE_DELTA = 0.0922;\nvar LONGITUDE_DELTA = LATITUDE_DELTA * ASPECT_RATIO;\n\nvar markers = function markers() {\n  return hawkerclosure.map(function (element) {\n    return React.createElement(Marker, {\n      coordinate: {\n        latitude: element.Coordinates.latitude,\n        longitude: element.Coordinates.longitude\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    });\n  });\n};\n\nfunction HawkerMapsScreen(_ref) {\n  var _this2 = this;\n\n  var navigation = _ref.navigation;\n\n  var list = function list() {\n    return hawkerclosure.map(function (element) {\n      _handleOpenWithWebBrowser = function _handleOpenWithWebBrowser() {\n        WebBrowser.openBrowserAsync(element.Address);\n      };\n\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate(\"Results\", {\n            path: element.name\n          });\n        },\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }\n      }, React.createElement(SafeAreaView, {\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 14\n        }\n      }, React.createElement(Card, {\n        style: {\n          marginBottom: 10,\n          width: 350\n        },\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }\n      }, React.createElement(Card.Content, {\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: [{\n          fontWeight: 'bold',\n          fontSize: 20,\n          textAlign: 'center'\n        }],\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 19\n        }\n      }, element.Name), React.createElement(Text, {\n        style: [{\n          fontWeight: 'bold',\n          fontSize: 15,\n          textAlign: 'center'\n        }],\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 19\n        }\n      }, \"Hawker Centre Closure:\"), React.createElement(Text, {\n        style: [{\n          fontWeight: 'bold',\n          fontSize: 15,\n          textAlign: 'center'\n        }],\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 18\n        }\n      }, element.q1_cleaningstartdate, \" to \", element.q1_cleaningenddate), React.createElement(View, {\n        style: {\n          alignItems: \"center\"\n        },\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 23\n        }\n      }, React.createElement(Pressable, {\n        style: styles.button_box,\n        onPress: _this2._handleOpenWithWebBrowser,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          alignItems: \"center\"\n        },\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }\n      }, \"Open on Google Maps\"))))))));\n    });\n  };\n\n  var modalizeRef = useRef(null);\n\n  var onOpen = function onOpen() {\n    var _modalizeRef$current;\n\n    (_modalizeRef$current = modalizeRef.current) == null ? void 0 : _modalizeRef$current.open();\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, React.createElement(ImageBackground, {\n    style: styles.background,\n    source: require(\"../../assets/Background.png\"),\n    resizeMode: \"cover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 31\n    }\n  }, React.createElement(Text, {\n    style: styles.headerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, \"Hawker Map\")), React.createElement(MapView, {\n    showsUserLocation: true,\n    provider: PROVIDER_DEFAULT,\n    style: styles.map,\n    initialRegion: {\n      latitude: LATITUDE,\n      longitude: LONGITUDE,\n      latitudeDelta: LATITUDE_DELTA,\n      longitudeDelta: LONGITUDE_DELTA\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, React.createElement(MapView.UrlTile, {\n    urlTemplate: \"https://maps-a.onemap.sg/v3/Default/{z}/{x}/{y}.png\",\n    zIndex: -1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }), hawkerclosure.map(function (element) {\n    return React.createElement(MapView.Marker, {\n      coordinate: element.Coordinates,\n      title: element.Name,\n      onPress: function onPress() {\n        return Alert.alert(element.Name, \"Route in Google Maps\", [{\n          text: \"No\",\n          onPress: function onPress() {\n            return console.log(\"Cancel Pressed\");\n          },\n          style: \"cancel\"\n        }, {\n          text: \"Yes\",\n          onPress: function onPress() {\n            return WebBrowser.openBrowserAsync(element.Address);\n          }\n        }]);\n      },\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    });\n  })), React.createElement(SafeAreaView, {\n    style: styles.test,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }, React.createElement(React.Fragment, null, React.createElement(TouchableOpacity, {\n    style: styles.buttoncarpark,\n    onPress: onOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.Buttontext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }, \"Show all Hawker Centres\")), React.createElement(Modalize, {\n    ref: modalizeRef,\n    scrollViewProps: {\n      showsVerticalScrollIndicator: false\n    },\n    snapPoint: 400,\n    modalStyle: styles.modalcontainer,\n    HeaderComponent: React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: styles.ModalHeadertext,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 15\n      }\n    }, \"All Hawker Centres\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    horizontal: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  }, list())))));\n}\n\nvar Stack = createStackNavigator();\nexport default function homestack() {\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    headerMode: \"float\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"HawkerMapsScreen\",\n    component: HawkerMapsScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 8\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Results\",\n    component: ResultsScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 5\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"InfoScreen\",\n    component: InfoScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 5\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  },\n  map: {\n    position: 'absolute',\n    top: 80,\n    left: 0,\n    right: 0,\n    bottom: 0\n  },\n  latlng: {\n    width: 200,\n    alignItems: 'stretch'\n  },\n  button: {\n    width: 100,\n    paddingHorizontal: 12,\n    alignItems: 'center',\n    marginHorizontal: 10\n  },\n  buttonContainer: {\n    marginVertical: 20,\n    backgroundColor: 'transparent'\n  },\n  button_box: {\n    padding: 6,\n    height: 45,\n    width: 250,\n    elevation: 5,\n    justifyContent: 'center',\n    paddingVertical: 5,\n    paddingHorizontal: 8,\n    borderRadius: 2,\n    elevation: 3,\n    backgroundColor: '#ffbe30'\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white'\n  },\n  background: {\n    width: \"110%\",\n    height: 80,\n    position: \"relative\",\n    marginBottom: 0\n  },\n  headerText: {\n    color: \"white\",\n    fontSize: 28,\n    fontWeight: \"bold\",\n    flexDirection: \"column\",\n    alignSelf: \"center\",\n    marginTop: 30\n  },\n  test: {\n    flex: 1,\n    justifyContent: \"flex-end\",\n    alignItems: \"center\"\n  },\n  buttoncarpark: {\n    borderColor: \"grey\",\n    borderWidth: 1,\n    backgroundColor: \"#F3F3F3\",\n    marginBottom: 10,\n    borderRadius: 20,\n    opacity: 0.7\n  },\n  Buttontext: {\n    fontWeight: \"bold\",\n    fontSize: 15,\n    padding: 15\n  },\n  modalcontainer: {\n    height: 100,\n    width: 400,\n    marginRight: 0,\n    alignSelf: \"center\",\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 3\n    },\n    shadowOpacity: 0.27,\n    shadowRadius: 4.65,\n    elevation: 6\n  },\n  ModalHeadertext: {\n    fontWeight: \"bold\",\n    fontSize: 25,\n    alignSelf: \"center\",\n    marginBottom: 5,\n    padding: 5\n  }\n});\nmodule.exports = HawkerMapsScreen;",
  "map": {
    "version": 3,
    "sources": [
      "/Users/charlotteteo/Downloads/cz2006final/craapy_swe_proj_frontend/frontend/screens/maps/HawkerMapsScreen.js"
    ],
    "names": [
      "React",
      "Component",
      "useRef",
      "createStackNavigator",
      "NavigationContainer",
      "ResultsScreen",
      "HomeScreen",
      "InfoScreen",
      "Avatar",
      "Card",
      "Title",
      "Paragraph",
      "IconButton",
      "WebBrowser",
      "hawkerclosure",
      "MapView",
      "MAP_TYPES",
      "PROVIDER_DEFAULT",
      "PROVIDER_GOOGLE",
      "MaterialIcons",
      "RBSheet",
      "Marker",
      "Modalize",
      "Dimensions",
      "get",
      "width",
      "height",
      "ASPECT_RATIO",
      "LATITUDE",
      "LONGITUDE",
      "LATITUDE_DELTA",
      "LONGITUDE_DELTA",
      "markers",
      "map",
      "element",
      "latitude",
      "Coordinates",
      "longitude",
      "HawkerMapsScreen",
      "navigation",
      "list",
      "_handleOpenWithWebBrowser",
      "openBrowserAsync",
      "Address",
      "navigate",
      "path",
      "name",
      "marginBottom",
      "fontWeight",
      "fontSize",
      "textAlign",
      "Name",
      "q1_cleaningstartdate",
      "q1_cleaningenddate",
      "alignItems",
      "styles",
      "button_box",
      "text",
      "modalizeRef",
      "onOpen",
      "current",
      "open",
      "container",
      "background",
      "require",
      "headerText",
      "latitudeDelta",
      "longitudeDelta",
      "Alert",
      "alert",
      "onPress",
      "console",
      "log",
      "style",
      "test",
      "buttoncarpark",
      "Buttontext",
      "showsVerticalScrollIndicator",
      "modalcontainer",
      "ModalHeadertext",
      "Stack",
      "homestack",
      "StyleSheet",
      "create",
      "position",
      "top",
      "left",
      "right",
      "bottom",
      "justifyContent",
      "latlng",
      "button",
      "paddingHorizontal",
      "marginHorizontal",
      "buttonContainer",
      "marginVertical",
      "backgroundColor",
      "padding",
      "elevation",
      "paddingVertical",
      "borderRadius",
      "lineHeight",
      "letterSpacing",
      "color",
      "flexDirection",
      "alignSelf",
      "marginTop",
      "flex",
      "borderColor",
      "borderWidth",
      "opacity",
      "marginRight",
      "shadowColor",
      "shadowOffset",
      "shadowOpacity",
      "shadowRadius",
      "module",
      "exports"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import React,{Component, useRef} from 'react';\nimport {\n  StyleSheet,\n  View,\n  Text,\n  Dimensions,\n Button,\n SafeAreaView,\n ScrollView,\n TouchableOpacity,\n Pressable,\n Alert,\n ImageBackground\n} from 'react-native';\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport ResultsScreen from \"../ResultsScreen\";\nimport HomeScreen from \"../home/HomeScreen\";\nimport InfoScreen from \"../InfoScreen\";\nimport {\n\tAvatar,\n\tCard,\n\tTitle,\n\tParagraph,\n\tIconButton,\n} from \"react-native-paper\";\nimport * as WebBrowser from 'expo-web-browser';\nimport { hawkerclosure } from '../../assets/HawkerClosure';\nimport MapView,  { MAP_TYPES, PROVIDER_DEFAULT,PROVIDER_GOOGLE } from 'react-native-maps';\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport RBSheet from \"react-native-raw-bottom-sheet\";\nimport { Marker } from 'react-native-maps';\nimport { Modalize } from 'react-native-modalize';\n\n\nconst { width, height } = Dimensions.get('window');\n\nconst ASPECT_RATIO = width / height;\nconst LATITUDE =  1.3109708;\nconst LONGITUDE = 103.7861198;\nconst LATITUDE_DELTA = 0.0922;\n\nconst LONGITUDE_DELTA = LATITUDE_DELTA * ASPECT_RATIO;\n\n\nconst markers =() => {\n  return hawkerclosure.map((element) => {\n    return(\n      <Marker coordinate = {{latitude: element.Coordinates.latitude,longitude: element.Coordinates.longitude} }/>\n    );\n  });\n};\n\n\n\nfunction HawkerMapsScreen ({navigation}){\n\nconst list = () => {\n    return hawkerclosure.map((element) => {\n      _handleOpenWithWebBrowser = () => {\n        WebBrowser.openBrowserAsync(element.Address);\n      };\n\n\n      return (\n        \n              <TouchableOpacity\t\n\n              onPress={() => \n                navigation.navigate(\"Results\",{path:element.name})\n      \n         \n              }\n            >\n             <SafeAreaView>\n            <Card style={{ marginBottom: 10,width: 350}}>\n                      <Card.Content>\n                  <Text style={[ {fontWeight: 'bold',fontSize: 20,textAlign: 'center',}]}>\n                    {element.Name}\n            \n                      </Text>\n                  <Text style={[ {fontWeight: 'bold',fontSize: 15,textAlign: 'center',}]}>\n                    Hawker Centre Closure:\n                    </Text>\n                 <Text style={[ {fontWeight: 'bold',fontSize: 15,textAlign: 'center',}]}>\n                    {element.q1_cleaningstartdate} to {element.q1_cleaningenddate}\n            \n                      </Text>\n                      <View style={{alignItems:\"center\"}}>\n            <Pressable style={styles.button_box} onPress={this._handleOpenWithWebBrowser}>\n            <View style={{alignItems:\"center\"}}>\n        <Text style={styles.text}>Open on Google Maps</Text>\n        </View>\n      </Pressable>\n      </View>\n  \n                \n            </Card.Content>\n  \n  \n  </Card>\n  </SafeAreaView>\n  \n            </TouchableOpacity>\n      \n      );\n    });\n  };\n   \n  const modalizeRef = useRef(null);\n  const onOpen = () => {\n    modalizeRef.current?.open();\n  };\n\n  return (\n      <View style={styles.container}>\n                              <ImageBackground style={styles.background} source={require('../../assets/Background.png')} resizeMode=\"cover\">      \n                <Text style={styles.headerText}>Hawker Map</Text>\n            </ImageBackground>  \n        {/* <MapView\n                initialRegion={{\n                latitude: LATITUDE,\n                longitude: LONGITUDE,\n                latitudeDelta: LATITUDE_DELTA,\n                longitudeDelta: LONGITUDE_DELTA,\n                }}\n            > */}\n            <MapView\n            showsUserLocation={true}\n          provider={PROVIDER_DEFAULT}\n       \n          style={styles.map}\n          initialRegion={{\n            latitude: LATITUDE,\n            longitude: LONGITUDE,\n            latitudeDelta: LATITUDE_DELTA,\n            longitudeDelta: LONGITUDE_DELTA,\n          \n          }}\n                          \n                        \n                         \n        >\n          <MapView.UrlTile\n            urlTemplate=\"https://maps-a.onemap.sg/v3/Default/{z}/{x}/{y}.png\"\n            zIndex={-1}\n          />\n           \n          \n            \n         \n            {hawkerclosure.map((element) => (\n          <MapView.Marker \n            coordinate={element.Coordinates}\n            title={element.Name} \n           onPress={() => Alert.alert(\n            element.Name,\n            \"Route in Google Maps\",\n            [\n              \n              {\n                text: \"No\",\n                onPress: () => console.log(\"Cancel Pressed\"),\n                style: \"cancel\"\n              },\n              {\n                text: \"Yes\",\n                onPress: () => WebBrowser.openBrowserAsync(element.Address)\n              }\n            ]\n        )\n          \n          \n          \n          }\n          />\n        ))}\n             \n         \n             \n          \n\n\n\n\n\n\n\n\n\n\n\n\n              </MapView>\n        <SafeAreaView style={styles.test}>\n        <>\n      <TouchableOpacity style={styles.buttoncarpark} onPress={onOpen}>\n        <Text style={styles.Buttontext}>Show all Hawker Centres</Text>\n      </TouchableOpacity>\n\n      <Modalize ref={modalizeRef}\n          scrollViewProps={{ showsVerticalScrollIndicator: false }}\n          snapPoint={400}\n          modalStyle={styles.modalcontainer}\n          HeaderComponent={\n            <View>\n              <Text style={styles.ModalHeadertext}>All Hawker Centres</Text>\n            </View>\n          }\n          //withHandle={false}\n          //adjustToContentHeight={true}\n          >\n          <ScrollView horizontal={false} >{list()}</ScrollView>\n        </Modalize>\n    </>\n      </SafeAreaView>\n            {/* <Text>Custom Tiles</Text> */}\n         \n       \n      </View>\n    );\n  \n}\n\n\n\n\n\n\n\nconst Stack = createStackNavigator();\n\nexport default function homestack() {\n\treturn (\n    <NavigationContainer>\n      <Stack.Navigator headerMode=\"float\">\n        <Stack.Screen name=\"Home\" component={HomeScreen}/>\n       <Stack.Screen name=\"HawkerMapsScreen\" component={HawkerMapsScreen} />\n    <Stack.Screen name=\"Results\" component={ResultsScreen}  />      \n    <Stack.Screen name=\"InfoScreen\" component={InfoScreen} />\n\t\t\n\t\t  </Stack.Navigator>\n    </NavigationContainer>\n\t);\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n  map: {\n    position: 'absolute',\n    top: 80,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n  \n  latlng: {\n    width: 200,\n    alignItems: 'stretch',\n  },\n  button: {\n    // flexDirection: 'row',\n    width: 100,\n    paddingHorizontal: 12,\n    alignItems: 'center',\n    marginHorizontal: 10,\n  },\n  buttonContainer: {\n    // flexDirection: 'row',\n    marginVertical: 20,\n    backgroundColor: 'transparent',\n  },\n  button_box: {\n\n    padding: 6,\n    height: 45,\n    width: 250,\n    // justifyContent: 'center',\n    // alignItems: 'center',\n    elevation: 5,\n    justifyContent: 'center',\n    paddingVertical: 5,\n    paddingHorizontal: 8,\n    borderRadius: 2,\n    elevation: 3,\n    backgroundColor: '#ffbe30',\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white',\n  },\n\n  background:{\n    width:\"110%\",\n    height:80,\n    //top:50,\n    //alignSelf: \"flex-start\",\n    //justifyContent: \"flex-start\",\n    position: \"relative\",\n    //borderColor: \"black\",\n    //borderWidth: 5,\n    marginBottom: 0\n},\nheaderText:{\n    color:\"white\",\n    fontSize: 28,\n    fontWeight:\"bold\",\n    flexDirection: \"column\",\n    alignSelf:\"center\",\n    marginTop: 30\n},\ntest:{\n  flex: 1, \n  justifyContent: \"flex-end\",\n  alignItems: \"center\",\n //borderColor:\"blue\",\n //borderWidth:10\n},\nbuttoncarpark:{\n  borderColor:\"grey\",\n  borderWidth:1,\n  backgroundColor: \"#F3F3F3\",\n  marginBottom: 10,\n  borderRadius:20,\n  opacity: 0.7\n\n},\nButtontext:{\n  fontWeight:\"bold\",\n  fontSize: 15,\n  padding:15\n},\nmodalcontainer:{\n  //borderWidth:5,\n  //borderColor: \"blue\",\n  height:100,\n  width:400,\n  marginRight:0,\n  alignSelf:\"center\",\n  alignItems:\"center\",\n  shadowColor: \"#000\",\nshadowOffset: {\n\twidth: 0,\n\theight: 3,\n},\nshadowOpacity: 0.27,\nshadowRadius: 4.65,\n\nelevation: 6,\n\n},\nModalHeadertext:{\n  fontWeight:\"bold\",\n  fontSize: 25,\n  alignSelf:\"center\",\n  marginBottom:5,\n  padding:5\n}\n});\n\nmodule.exports = HawkerMapsScreen;"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
