{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\yipin\\\\OneDrive - Nanyang Technological University\\\\Desktop\\\\Computing\\\\CZ2006 Software Engineering\\\\Project3\\\\craapy_swe_proj_frontend-charlotte_main\\\\frontend\\\\screens\\\\maps\\\\HawkerMaps.js\";\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport ResultsScreen from \"../ResultsScreen\";\nimport { Avatar, Card, Title, Paragraph, IconButton } from \"react-native-paper\";\nimport * as WebBrowser from 'expo-web-browser';\nimport { hawkerclosure } from \"../../assets/HawkerClosure\";\nimport MapView, { MAP_TYPES, PROVIDER_DEFAULT, PROVIDER_GOOGLE } from 'react-native-maps';\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport RBSheet from \"react-native-raw-bottom-sheet\";\nimport { Marker } from 'react-native-maps';\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar ASPECT_RATIO = width / height;\nvar LATITUDE = 1.3109708;\nvar LONGITUDE = 103.7861198;\nvar LATITUDE_DELTA = 0.0922;\nvar LONGITUDE_DELTA = LATITUDE_DELTA * ASPECT_RATIO;\n\nvar markers = function markers() {\n  return hawkerclosure.map(function (element) {\n    return React.createElement(Marker, {\n      coordinate: {\n        latitude: element.Coordinates.latitude,\n        longitude: element.Coordinates.longitude\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    });\n  });\n};\n\nfunction HawkerMaps(_ref) {\n  var _this2 = this;\n\n  var navigation = _ref.navigation;\n\n  var list = function list() {\n    return hawkerclosure.map(function (element) {\n      _handleOpenWithWebBrowser = function _handleOpenWithWebBrowser() {\n        WebBrowser.openBrowserAsync(element.Address);\n      };\n\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate(\"Results\", {\n            path: \"fruits\"\n          });\n        },\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }\n      }, React.createElement(SafeAreaView, {\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 14\n        }\n      }, React.createElement(Card, {\n        style: {\n          marginBottom: 10,\n          width: 350\n        },\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }\n      }, React.createElement(Card.Content, {\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: [{\n          fontWeight: 'light',\n          fontSize: 25\n        }],\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 19\n        }\n      }, element.Name), React.createElement(Text, {\n        style: [{\n          fontWeight: 'light',\n          fontSize: 18\n        }],\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 19\n        }\n      }, \"Hawker Centre Closure:\"), React.createElement(Text, {\n        style: [{\n          fontWeight: 'light',\n          fontSize: 16\n        }],\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 18\n        }\n      }, element.q1_cleaningstartdate, \" to \", element.q1_cleaningenddate), React.createElement(Pressable, {\n        style: styles.button_box,\n        onPress: _this2._handleOpenWithWebBrowser,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }\n      }, \"Open on Google Maps\"))))));\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, React.createElement(MapView, {\n    showsUserLocation: true,\n    provider: PROVIDER_DEFAULT,\n    style: styles.map,\n    initialRegion: {\n      latitude: LATITUDE,\n      longitude: LONGITUDE,\n      latitudeDelta: LATITUDE_DELTA,\n      longitudeDelta: LONGITUDE_DELTA\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, React.createElement(MapView.UrlTile, {\n    urlTemplate: \"https://maps-a.onemap.sg/v3/Default/{z}/{x}/{y}.png\",\n    zIndex: -1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }), hawkerclosure.map(function (element) {\n    return React.createElement(MapView.Marker, {\n      coordinate: element.Coordinates,\n      title: element.Name,\n      onPress: function onPress() {\n        return Alert.alert(element.Name, \"Route in Google Maps\", [{\n          text: \"No\",\n          onPress: function onPress() {\n            return console.log(\"Cancel Pressed\");\n          },\n          style: \"cancel\"\n        }, {\n          text: \"Yes\",\n          onPress: function onPress() {\n            return WebBrowser.openBrowserAsync(element.Address);\n          }\n        }]);\n      },\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    });\n  })), React.createElement(SafeAreaView, {\n    style: {\n      flex: 1,\n      justifyContent: \"bottom\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    title: \"Show all Hawker Centres\",\n    onPress: function onPress() {\n      return _this2.RBSheet.open();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }), React.createElement(RBSheet, {\n    ref: function ref(_ref2) {\n      _this2.RBSheet = _ref2;\n    },\n    height: 300,\n    openDuration: 300,\n    customStyles: {\n      container: {\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flex: 1\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }, React.createElement(ScrollView, {\n    horizontal: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }, list()))));\n}\n\nvar Stack = createStackNavigator();\nexport default function homestack() {\n  return React.createElement(Stack.Navigator, {\n    mode: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 3\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Search\",\n    component: SearchScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 4\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Filter\",\n    component: FilterScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Results\",\n    component: ResultsScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  },\n  map: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  },\n  latlng: {\n    width: 200,\n    alignItems: 'stretch'\n  },\n  button: {\n    width: 100,\n    paddingHorizontal: 12,\n    alignItems: 'center',\n    marginHorizontal: 10\n  },\n  buttonContainer: {\n    marginVertical: 20,\n    backgroundColor: 'transparent'\n  },\n  button_box: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 8,\n    paddingHorizontal: 5,\n    borderRadius: 4,\n    elevation: 3,\n    backgroundColor: '#FFB899'\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white'\n  }\n});\nmodule.exports = HawkerMaps;","map":{"version":3,"sources":["C:/Users/yipin/OneDrive - Nanyang Technological University/Desktop/Computing/CZ2006 Software Engineering/Project3/craapy_swe_proj_frontend-charlotte_main/frontend/screens/maps/HawkerMaps.js"],"names":["React","Component","createStackNavigator","NavigationContainer","ResultsScreen","Avatar","Card","Title","Paragraph","IconButton","WebBrowser","hawkerclosure","MapView","MAP_TYPES","PROVIDER_DEFAULT","PROVIDER_GOOGLE","MaterialIcons","RBSheet","Marker","Dimensions","get","width","height","ASPECT_RATIO","LATITUDE","LONGITUDE","LATITUDE_DELTA","LONGITUDE_DELTA","markers","map","element","latitude","Coordinates","longitude","HawkerMaps","navigation","list","_handleOpenWithWebBrowser","openBrowserAsync","Address","navigate","path","marginBottom","fontWeight","fontSize","Name","q1_cleaningstartdate","q1_cleaningenddate","styles","button_box","text","container","latitudeDelta","longitudeDelta","Alert","alert","onPress","console","log","style","flex","justifyContent","alignItems","open","ref","Stack","homestack","SearchScreen","FilterScreen","StyleSheet","create","position","top","left","right","bottom","latlng","button","paddingHorizontal","marginHorizontal","buttonContainer","marginVertical","backgroundColor","paddingVertical","borderRadius","elevation","lineHeight","letterSpacing","color","module","exports"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport {\n  StyleSheet,\n  View,\n  Text,\n  Dimensions,\n Button,\n SafeAreaView,\n ScrollView,\n TouchableOpacity,\n Pressable,\n Alert,\n ImageBackground\n} from 'react-native';\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport ResultsScreen from \"../ResultsScreen\";\nimport {\n\tAvatar,\n\tCard,\n\tTitle,\n\tParagraph,\n\tIconButton,\n} from \"react-native-paper\";\nimport * as WebBrowser from 'expo-web-browser';\nimport { hawkerclosure } from '../../assets/HawkerClosure';\nimport MapView,  { MAP_TYPES, PROVIDER_DEFAULT,PROVIDER_GOOGLE } from 'react-native-maps';\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport RBSheet from \"react-native-raw-bottom-sheet\";\nimport { Marker } from 'react-native-maps';\n\nconst { width, height } = Dimensions.get('window');\n\nconst ASPECT_RATIO = width / height;\nconst LATITUDE =  1.3109708;\nconst LONGITUDE = 103.7861198;\nconst LATITUDE_DELTA = 0.0922;\n\nconst LONGITUDE_DELTA = LATITUDE_DELTA * ASPECT_RATIO;\n\nconst markers =() => {\n  return hawkerclosure.map((element) => {\n    return(\n      <Marker coordinate = {{latitude: element.Coordinates.latitude,longitude: element.Coordinates.longitude} }/>\n    );\n  });\n};\n\n\n\nfunction HawkerMaps ({navigation}){\n\nconst list = () => {\n    return hawkerclosure.map((element) => {\n      _handleOpenWithWebBrowser = () => {\n        WebBrowser.openBrowserAsync(element.Address);\n      };\n      return (\n        \n              <TouchableOpacity\t\n\n              onPress={() => \n                navigation.navigate(\"Results\",{path:\"fruits\"})\n         \n              }\n            >\n             <SafeAreaView>\n            <Card style={{ marginBottom: 10,width: 350}}>\n                      <Card.Content>\n                  <Text style={[ {fontWeight: 'light',fontSize: 25}]}>\n                    {element.Name}\n            \n                      </Text>\n                  <Text style={[ {fontWeight: 'light',fontSize: 18}]}>\n                    Hawker Centre Closure:\n                    </Text>\n                 <Text style={[ {fontWeight: 'light',fontSize: 16}]}>\n                    {element.q1_cleaningstartdate} to {element.q1_cleaningenddate}\n            \n                      </Text>\n             \n                  <Pressable style={styles.button_box} onPress={this._handleOpenWithWebBrowser}>\n        <Text style={styles.text}>Open on Google Maps</Text>\n  \n      </Pressable>\n    \n                \n            </Card.Content>\n  \n  \n  </Card>\n  </SafeAreaView>\n  \n            </TouchableOpacity>\n      \n      );\n    });\n  };\n   \n  return (\n      <View style={styles.container}>\n        {/* <MapView\n                initialRegion={{\n                latitude: LATITUDE,\n                longitude: LONGITUDE,\n                latitudeDelta: LATITUDE_DELTA,\n                longitudeDelta: LONGITUDE_DELTA,\n                }}\n            > */}\n            <MapView\n            showsUserLocation={true}\n          provider={PROVIDER_DEFAULT}\n       \n          style={styles.map}\n          initialRegion={{\n            latitude: LATITUDE,\n            longitude: LONGITUDE,\n            latitudeDelta: LATITUDE_DELTA,\n            longitudeDelta: LONGITUDE_DELTA,\n          \n          }}\n                          \n                        \n                         \n        >\n          <MapView.UrlTile\n            urlTemplate=\"https://maps-a.onemap.sg/v3/Default/{z}/{x}/{y}.png\"\n            zIndex={-1}\n          />\n           \n          \n            \n         \n            {hawkerclosure.map((element) => (\n          <MapView.Marker \n            coordinate={element.Coordinates}\n            title={element.Name} \n           onPress={() => Alert.alert(\n            element.Name,\n            \"Route in Google Maps\",\n            [\n              \n              {\n                text: \"No\",\n                onPress: () => console.log(\"Cancel Pressed\"),\n                style: \"cancel\"\n              },\n              {\n                text: \"Yes\",\n                onPress: () => WebBrowser.openBrowserAsync(element.Address)\n              }\n            ]\n        )\n          \n          \n          \n          }\n          />\n        ))}\n             \n         \n             \n          \n\n\n\n\n\n\n\n\n\n\n\n\n              </MapView>\n        <SafeAreaView style={{ flex: 1, justifyContent: \"bottom\", alignItems: \"center\" }}>\n          <Button title=\"Show all Hawker Centres\" onPress={() => this.RBSheet.open() } />\n          <RBSheet\n            ref={ref => {\n              this.RBSheet = ref;\n            }}\n            height={300}\n            openDuration={300}\n            customStyles={{\n              container: {\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                flex:1\n              }\n            }}\n          >\n        \n            <ScrollView horizontal={false} >{list()}</ScrollView>\n          </RBSheet>\n      </SafeAreaView>\n            {/* <Text>Custom Tiles</Text> */}\n         \n       \n      </View>\n    );\n  \n}\n\n\n\n\n\n\n\nconst Stack = createStackNavigator();\n\nexport default function homestack() {\n\treturn (\n\t\t<Stack.Navigator mode=\"card\">\n\t\t\t<Stack.Screen name=\"Search\" component={SearchScreen} />\n      <Stack.Screen name=\"Filter\" component={FilterScreen} />\n      <Stack.Screen name=\"Results\" component={ResultsScreen} />\n\t\t</Stack.Navigator>\n\t);\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n  map: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n  \n  latlng: {\n    width: 200,\n    alignItems: 'stretch',\n  },\n  button: {\n    // flexDirection: 'row',\n    width: 100,\n    paddingHorizontal: 12,\n    alignItems: 'center',\n    marginHorizontal: 10,\n  },\n  buttonContainer: {\n    // flexDirection: 'row',\n    marginVertical: 20,\n    backgroundColor: 'transparent',\n  },\n  button_box: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 8,\n    paddingHorizontal: 5,\n    borderRadius: 4,\n    elevation: 3,\n    backgroundColor: '#FFB899',\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white',\n  },\n});\n\nmodule.exports = HawkerMaps;"]},"metadata":{},"sourceType":"module"}