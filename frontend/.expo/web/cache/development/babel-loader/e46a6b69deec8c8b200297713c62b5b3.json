{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _assertThisInitialized = require(\"@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _wrapNativeSuper = require(\"@babel/runtime/helpers/wrapNativeSuper\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.invariant = void 0;\nvar genericMessage = 'Invariant Violation \"react-native-modalize\"';\nvar _Object$setPrototypeO = Object.setPrototypeOf,\n    setPrototypeOf = _Object$setPrototypeO === void 0 ? function (obj, proto) {\n  obj.__proto__ = proto;\n  return obj;\n} : _Object$setPrototypeO;\n\nvar InvariantError = function (_Error) {\n  _inherits(InvariantError, _Error);\n\n  var _super = _createSuper(InvariantError);\n\n  function InvariantError() {\n    var _this;\n\n    var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : genericMessage;\n\n    _classCallCheck(this, InvariantError);\n\n    _this = _super.call(this, \"\" + message);\n    _this.framesToPop = 1;\n    _this.name = genericMessage;\n    setPrototypeOf(_assertThisInitialized(_this), InvariantError.prototype);\n    return _this;\n  }\n\n  return InvariantError;\n}(_wrapNativeSuper(Error));\n\nexports.invariant = function (condition, message) {\n  if (condition) {\n    throw new InvariantError(message);\n  }\n};","map":{"version":3,"sources":["/Users/charlotteteo/Downloads/cz2006final/craapy_swe_proj_frontend/frontend/node_modules/react-native-modalize/lib/utils/invariant.js"],"names":["Object","defineProperty","exports","value","invariant","genericMessage","setPrototypeOf","obj","proto","__proto__","InvariantError","message","framesToPop","name","prototype","Error","condition"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,SAAR,GAAoB,KAAK,CAAzB;AACA,IAAMC,cAAc,GAAG,6CAAvB;AACA,4BAGOL,MAHP,CAAQM,cAAR;AAAA,IAAQA,cAAR,sCAAyB,UAACC,GAAD,EAAMC,KAAN,EAAgB;AACrCD,EAAAA,GAAG,CAACE,SAAJ,GAAgBD,KAAhB;AACA,SAAOD,GAAP;AACH,CAHD;;IAIMG,c;;;;;AACF,4BAAsC;AAAA;;AAAA,QAA1BC,OAA0B,uEAAhBN,cAAgB;;AAAA;;AAClC,mCAASM,OAAT;AACA,UAAKC,WAAL,GAAmB,CAAnB;AACA,UAAKC,IAAL,GAAYR,cAAZ;AACAC,IAAAA,cAAc,gCAAOI,cAAc,CAACI,SAAtB,CAAd;AAJkC;AAKrC;;;mBANwBC,K;;AAQ7Bb,OAAO,CAACE,SAAR,GAAoB,UAACY,SAAD,EAAYL,OAAZ,EAAwB;AACxC,MAAIK,SAAJ,EAAe;AACX,UAAM,IAAIN,cAAJ,CAAmBC,OAAnB,CAAN;AACH;AACJ,CAJD","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.invariant = void 0;\nconst genericMessage = 'Invariant Violation \"react-native-modalize\"';\nconst { setPrototypeOf = (obj, proto) => {\n    obj.__proto__ = proto;\n    return obj;\n}, } = Object;\nclass InvariantError extends Error {\n    constructor(message = genericMessage) {\n        super(`${message}`);\n        this.framesToPop = 1;\n        this.name = genericMessage;\n        setPrototypeOf(this, InvariantError.prototype);\n    }\n}\nexports.invariant = (condition, message) => {\n    if (condition) {\n        throw new InvariantError(message);\n    }\n};\n"]},"metadata":{},"sourceType":"script"}