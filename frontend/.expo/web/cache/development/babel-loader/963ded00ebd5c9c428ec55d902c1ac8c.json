{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSpringConfig = void 0;\n\nvar invariant_1 = require(\"./invariant\");\n\nexports.getSpringConfig = function (config) {\n  var friction = config.friction,\n      tension = config.tension,\n      speed = config.speed,\n      bounciness = config.bounciness,\n      stiffness = config.stiffness,\n      damping = config.damping,\n      mass = config.mass;\n\n  if (stiffness || damping || mass) {\n    invariant_1.invariant(bounciness || speed || tension || friction, \"You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one\");\n    return {\n      stiffness: stiffness,\n      damping: damping,\n      mass: mass\n    };\n  } else if (bounciness || speed) {\n    invariant_1.invariant(tension || friction || stiffness || damping || mass, \"You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one\");\n    return {\n      bounciness: bounciness,\n      speed: speed\n    };\n  }\n\n  return {\n    tension: tension,\n    friction: friction\n  };\n};","map":{"version":3,"sources":["/Users/charlotteteo/Downloads/cz2006final/craapy_swe_proj_frontend/frontend/node_modules/react-native-modalize/lib/utils/get-spring-config.js"],"names":["Object","defineProperty","exports","value","getSpringConfig","invariant_1","require","config","friction","tension","speed","bounciness","stiffness","damping","mass","invariant"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,eAAR,GAA0B,KAAK,CAA/B;;AACA,IAAMC,WAAW,GAAGC,OAAO,eAA3B;;AACAJ,OAAO,CAACE,eAAR,GAA0B,UAACG,MAAD,EAAY;AAClC,MAAQC,QAAR,GAA2ED,MAA3E,CAAQC,QAAR;AAAA,MAAkBC,OAAlB,GAA2EF,MAA3E,CAAkBE,OAAlB;AAAA,MAA2BC,KAA3B,GAA2EH,MAA3E,CAA2BG,KAA3B;AAAA,MAAkCC,UAAlC,GAA2EJ,MAA3E,CAAkCI,UAAlC;AAAA,MAA8CC,SAA9C,GAA2EL,MAA3E,CAA8CK,SAA9C;AAAA,MAAyDC,OAAzD,GAA2EN,MAA3E,CAAyDM,OAAzD;AAAA,MAAkEC,IAAlE,GAA2EP,MAA3E,CAAkEO,IAAlE;;AACA,MAAIF,SAAS,IAAIC,OAAb,IAAwBC,IAA5B,EAAkC;AAC9BT,IAAAA,WAAW,CAACU,SAAZ,CAAsBJ,UAAU,IAAID,KAAd,IAAuBD,OAAvB,IAAkCD,QAAxD;AACA,WAAO;AACHI,MAAAA,SAAS,EAATA,SADG;AAEHC,MAAAA,OAAO,EAAPA,OAFG;AAGHC,MAAAA,IAAI,EAAJA;AAHG,KAAP;AAKH,GAPD,MAQK,IAAIH,UAAU,IAAID,KAAlB,EAAyB;AAC1BL,IAAAA,WAAW,CAACU,SAAZ,CAAsBN,OAAO,IAAID,QAAX,IAAuBI,SAAvB,IAAoCC,OAApC,IAA+CC,IAArE;AACA,WAAO;AACHH,MAAAA,UAAU,EAAVA,UADG;AAEHD,MAAAA,KAAK,EAALA;AAFG,KAAP;AAIH;;AACD,SAAO;AACHD,IAAAA,OAAO,EAAPA,OADG;AAEHD,IAAAA,QAAQ,EAARA;AAFG,GAAP;AAIH,CArBD","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSpringConfig = void 0;\nconst invariant_1 = require(\"./invariant\");\nexports.getSpringConfig = (config) => {\n    const { friction, tension, speed, bounciness, stiffness, damping, mass } = config;\n    if (stiffness || damping || mass) {\n        invariant_1.invariant(bounciness || speed || tension || friction, `You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one`);\n        return {\n            stiffness,\n            damping,\n            mass,\n        };\n    }\n    else if (bounciness || speed) {\n        invariant_1.invariant(tension || friction || stiffness || damping || mass, `You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one`);\n        return {\n            bounciness,\n            speed,\n        };\n    }\n    return {\n        tension,\n        friction,\n    };\n};\n"]},"metadata":{},"sourceType":"script"}